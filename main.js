/**
 * @license main.js v1.0.0 23/05/2024
 * 
 * This file is part of the Stewart.js project which has been split and modified.
 *
 * Original code from Stewart.js:
 * Stewart.js v1.0.1 17/02/2019
 * https://raw.org/research/inverse-kinematics-of-a-stewart-platform/
 * 
 * Copyright (c) 2023, Robert Eisele (robert@raw.org)
 * Licensed under the MIT License.
 *
 * Modifications in this file by Albert Castellanos Roig (albertcastellanosrg@gmail.com), 2024
 * Licensed under the MIT License.
 */

// Declare global variables for animation and platform
var animation;
var platform;

// Function to set up the platform and initialize the animation
function setupPlatform() {

    var cameraView
    var cameraAngles = {}
    var currentView = 'defaultView'
    var canvasWidth = 600
    var canvasHeight = 460
    var isInputFocused = false
    let platformValues = {}

    // p5.js sketch constructor function. helps organize and modularize code
    var sketch = function (p) {
        let font;
        p.preload = function () {
            font = p.loadFont('https://fonts.gstatic.com/s/newscycle/v14/CSR54z1Qlv-GDxkbKVQ_dFsvWNRevA.ttf');
        }
        // Setup function runs once at the beginning
        p.setup = function () {
            // Create a 3D canvas with specific size (600x600)
            p.createCanvas(canvasWidth, canvasHeight, p.WEBGL);

            p.textFont(font)

            // Initialize Stewart platform and animation
            platform = new Stewart;                 // Create a new instance of a platform and assign it to previously defined variable
            animation = new Animation(platform);    // Create a new instance of animation and assign it to previously defined variable, as we create the object, the start() function is called for this object.
            platform.initHexagonal(platformValues);               // Execute the initHexagonal function with default values (opts argument is blank)  

            cameraAngles.defaultView = 
            [-1000, 0, platform.T0[2]+300, 
            platform.wallDistance/8, 0, platform.T0[2]]

            cameraView = cameraAngles.defaultView
            animation._start(Animation.SVG(SVGS[0], animation.drawingSize, animation.drawingSpeed))
        };

        // Draw function is called continuously to update the canvas
        p.draw = function () {
            cameraAngles = {
                defaultView: cameraAngles.defaultView, 
                frontView: 
                [-1000, 0, platform.T0[2]+100, 
                platform.wallDistance, 0, platform.T0[2]],               
                sideView: 
                [-platform.rotationAxisOffset*1.5, platform.wallDistance*2.2, platform.T0[2]+100, 
                platform.wallDistance/2, 0, platform.T0[2]], 
                topView: 
                [-1300 -platform.rotationAxisOffset*1.3, 0, platform.wallDistance*2, 
                platform.wallDistance*0.5, 0, platform.T0[2]],
                logoView: 
                [platform.wallDistance - 8*animation.drawingSize/(Math.tan(1.04)*2), 0, platform.T0[2], 
                platform.wallDistance, 0, platform.T0[2]], 
                sphereView: 
                [platform.wallDistance, 0, animation.drawingSize * 4 + platform.T0[2], 
                platform.wallDistance*0.9, 0, 0], 
                platformView: 
                [-platform.rotationAxisOffset*1.7 + platform.T0[2], platform.rotationAxisOffset*2.2 + + platform.T0[2]*2, platform.T0[2]+300, 
                0, 0, platform.T0[2]/2], 
            }

            // Clear the background
            p.background(255);

            //set the position and orientation of the camera
            p.camera(cameraAngles[currentView][0],cameraAngles[currentView][1],cameraAngles[currentView][2],cameraAngles[currentView][3],cameraAngles[currentView][4],cameraAngles[currentView][5], 0, 0, -1);

            // Apply transformations for user interaction
            p.push(); // separate this transformations from other possible ones outside

            // Draw motion path (if active)
            animation.drawPath(p);

            // Tick animation
            animation.update(p);

            // Draw the updated platform
            platform.draw(p);
            displayCurrentServoAngles();
            displayPlatformParameters();

            p.pop(); // stop separating this transformations from other possible ones outside of the push-pop
        };
    };

    // Create a new p5.js instance with the sketch function and attach it to the 'canvas' element
    new p5(sketch, 'canvas');

    // Event listener that executes this function when clicking any key. The e argument gives information about
    // the clicked key. e.keyCode gives us the code of the clicked key, for example.
    document.onkeydown = function(e) {

        if (isInputFocused) {
            return
        }
        // If clicked key is spacebar, it toggles the visibility of the path.
        if (e.keyCode === 32) {
            animation.pathVisible = !animation.pathVisible;
            e.preventDefault();
            return;
        }
        if (e.keyCode === 68) {
            animation.realDraw = !animation.realDraw;
            e.preventDefault();
            return;
        }

    };

    // Function to create an SVG image and append it to the specified container
    createSVGImage = function(id, root, d, box) {

        var xmlns = "http://www.w3.org/2000/svg";  //SVG namespace (necessary to display svg images)

        // Create an SVG element and display it onscreen adjusting box location and size.
        var svg = document.createElementNS(xmlns, "svg");
        svg.setAttribute("viewBox", box.x + " " + box.y + " " + box.width + " " + box.height);
        svg.setAttribute("width", 50);
        svg.setAttribute("height", 50);

        // Add an onclick event to trigger an animation when the svg gets clicked, it calls the _start function.
        // It passes as argument,(play). The play argument is the object that contains the info about the animation to play.
        // It is created using the Animation.SVG function.
        svg.onclick = function() {
            animation._start(Animation.SVG(SVGS[id], animation.drawingSize, animation.drawingSpeed));
            animation.currentPath = [[],[],[],[]]
            animation.stopDrawingPath = false
        };

        // Creates the html element with its respective attributes to display the svg image onscreen.
        var path = document.createElementNS(xmlns, "path");
        path.setAttribute('stroke', "#000000");
        path.setAttribute('fill', "none");
        path.setAttribute('stroke-width', 5);

        path.setAttribute('d', d);
        svg.appendChild(path);

        root.appendChild(svg);
    }

    // Acces the element images on html file
    $images = document.getElementById("images");

    // List of all the paths of the svg images that will display onscreen, with their respective box attribute and main parameters.
    SVGS = [ {
          name: 'Raw logo',
          path: "m 4.665,299.723 -1.753,-0.509 -0.967,-1.068 c -0.532,-0.588 -1.184,-1.827 -1.45,-2.755 l -0.484,-1.687 0.728,-2.117 0.728,-2.117 38.519,-38.231 38.519,-38.231 1.504,-0.685 1.504,-0.685 24.054,-0.026 24.054,-0.026 1.935,0.809 1.935,0.809 0.891,1.723 0.891,1.723 v 8.05 8.05 l -1.934,1.934 -1.934,1.934 h -19.26 -19.262 l -1.972,0.566 -1.972,0.566 -31.02,30.937 -31.02,30.937 -2.276,0.35 c -1.252,0.193 -5.86,0.33 -10.24,0.305 l -7.965,-0.045 z m 112.1,0.226 c -0.637,-0.127 -1.857,-0.796 -2.711,-1.487 l -1.553,-1.256 -0.492,-1.751 -0.492,-1.75 0.728,-2.117 0.728,-2.117 38.519,-38.231 38.519,-38.231 1.504,-0.685 1.504,-0.685 15.843,-0.026 15.843,-0.026 1.96,0.93 1.96,0.93 0.828,1.602 0.828,1.602 v 39.311 39.311 l -0.805,1.556 -0.805,1.556 -1.557,0.833 -1.557,0.833 h -9.544 -9.544 l -1.606,-1.191 -1.606,-1.191 -0.679,-1.938 -0.679,-1.938 -0.032,-21.531 -0.032,-21.531 -0.971,-1.643 -0.971,-1.643 -1.818,-0.863 c -2.158,-1.024 -3.827,-1.093 -5.523,-0.23 -0.683,0.348 -13.147,12.475 -27.697,26.95 l -26.454,26.317 -2.276,0.351 c -2.443,0.377 -17.444,0.36 -19.363,-0.022 z m 147.466,-0.44 c -2.531,-0.903 -2.264,-0.67 -3.441,-2.986 l -0.926,-1.821 v -38.695 -38.694 l 0.925,-1.939 0.925,-1.939 1.939,-0.925 1.939,-0.925 h 8.57 8.57 l 1.96,0.93 1.96,0.93 0.828,1.602 0.828,1.602 v 21.703 21.703 l 0.928,1.955 0.928,1.955 1.19,0.834 1.19,0.834 h 2.835 2.835 l 26.764,-26.662 26.764,-26.662 1.92,-0.361 1.92,-0.361 h 15.308 15.308 l 1.935,0.809 1.935,0.809 0.891,1.723 0.891,1.723 v 21.38 21.38 l 0.784,1.877 0.784,1.877 1.568,1.233 1.568,1.233 h 2.589 2.589 l 26.775,-26.66 26.775,-26.66 1.92,-0.363 1.92,-0.362 h 23.739 23.739 l 1.933,1.3 1.933,1.3 0.679,1.971 0.679,1.971 0.032,6.104 0.032,6.104 -0.924,2.309 -0.924,2.309 -1.608,0.831 -1.608,0.832 -18.375,0.006 -18.375,0.006 -2.276,0.352 -2.276,0.352 -31.29,31.172 -31.29,31.172 -2.56,0.369 -2.56,0.369 -14.893,-0.182 -14.893,-0.182 -1.605,-1.191 -1.605,-1.191 -0.679,-1.938 -0.679,-1.938 -0.032,-22.102 -0.032,-22.102 -1.965,-1.965 -1.965,-1.965 -2.85,0.173 -2.85,0.173 -27.033,26.633 -27.033,26.633 -1.856,0.532 -1.856,0.532 -14.795,-0.025 -14.795,-0.025 z m 212.395,0.243 -1.982,-0.466 -1.289,-1.499 -1.289,-1.499 v -2.58 -2.58 l 6.969,-7.115 6.969,-7.115 1.536,-0.799 1.536,-0.799 h 8.874 8.875 l 1.627,0.841 1.627,0.841 0.966,2.53 0.966,2.53 -0.203,6.827 -0.203,6.827 -1.191,1.606 -1.191,1.606 -1.938,0.679 -1.938,0.679 -13.369,-0.026 -13.369,-0.026 z",
          box: { x: 0, y: 0, width: 512, height: 512 }
        }, {
          name: 'Odisee de co hogeschool logo',
          path: "M 47.107,291.536 C 26.877,288.292 10.985,276.415 4.114,259.406 c -2.714,-6.719 -3.767,-11.745 -4.177,-19.932 -0.946,-18.894 6.851,-36.348 20.817,-46.601 16.818,-12.346 43.214,-14.396 62.263,-4.836 6.455,3.24 10.462,6.216 15.079,11.204 10.077,10.884 14.771,24.777 13.893,41.119 -0.5,9.305 -1.681,13.956 -5.579,21.966 -6.712,13.794 -17.477,22.588 -33.4,27.285 -4.944,1.458 -7.856,1.853 -14.997,2.032 -4.874,0.122 -9.782,0.075 -10.907,-0.106 z m 18.001,-19.695 c 12.111,-2.855 21.746,-12.342 24.923,-24.542 1.388,-5.33 1.36,-16.042 -0.055,-20.81 -2.924,-9.851 -9.304,-17.806 -17.306,-21.579 -14.096,-6.647 -31.277,-4.189 -41.649,5.959 -6.664,6.521 -10.167,15.447 -10.149,25.865 0.019,11.055 3.18,19.311 10.008,26.138 8.577,8.577 21.511,11.966 34.228,8.968 z m 90.092,19.395 c -9.686,-1.9 -17.072,-5.966 -23.517,-12.945 -11.36,-12.302 -13.932,-32.925 -6.156,-49.362 0.993,-2.099 3.54,-5.695 5.661,-7.993 7.914,-8.573 17.775,-12.898 29.419,-12.902 10.549,-0.003 17.866,3 24.027,9.863 l 2.554,2.845 0.083,-22.154 c 0.045,-12.185 0.033,-22.538 -0.028,-23.007 -0.084,-0.648 2.276,-0.852 9.844,-0.852 h 9.955 l -0.246,41.412 c -0.274,46.012 -0.143,44.598 -5.043,54.633 -6.387,13.079 -21.377,21.366 -38.219,21.129 -2.921,-0.041 -6.671,-0.341 -8.332,-0.667 z m 19.24,-19.512 c 4.956,-2.224 9.431,-7.057 11.415,-12.329 1.229,-3.265 1.422,-4.977 1.206,-10.703 -0.233,-6.19 -0.469,-7.212 -2.563,-11.112 -2.558,-4.765 -4.676,-6.82 -9.844,-9.546 -3.143,-1.658 -4.178,-1.836 -10.639,-1.833 -6.852,0.003 -7.341,0.103 -11.469,2.338 -6.681,3.617 -10.38,8.944 -11.798,16.991 -1.399,7.945 1.325,16.923 6.678,22.007 7.042,6.689 17.744,8.348 27.014,4.188 z m 49.563,-21.669 v -39.878 h 9.543 9.543 v 39.878 39.878 h -9.543 -9.543 z m 3.56,-51.88 c -6.231,-3.175 -8.642,-11.46 -5.246,-18.028 0.551,-1.066 2.129,-2.798 3.506,-3.848 2.244,-1.712 3.051,-1.91 7.777,-1.91 4.881,0 5.467,0.157 7.892,2.116 3.326,2.687 5.07,6.956 4.647,11.371 -0.404,4.211 -1.766,6.776 -4.848,9.126 -3.15,2.403 -10.141,3 -13.728,1.172 z m 53.019,92.74 c -6.648,-1.433 -13.661,-5.167 -17.293,-9.205 -3.322,-3.695 -5.884,-9.476 -5.884,-13.274 v -2.36 h 9.543 c 8.859,0 9.543,0.091 9.543,1.271 0,1.971 2.675,4.905 5.741,6.298 3.899,1.771 13.284,1.755 17.213,-0.029 6.792,-3.084 7.079,-10.608 0.511,-13.389 -1.154,-0.489 -5.755,-1.382 -10.225,-1.985 -9.851,-1.329 -17.401,-3.28 -21.136,-5.462 -7.121,-4.16 -10.287,-10.793 -9.642,-20.206 1.053,-15.362 12.812,-24.507 31.512,-24.507 11.278,0 20.134,3.336 25.91,9.76 3.123,3.474 5.788,9.379 5.788,12.827 v 2.019 l -9.373,-0.015 -9.373,-0.015 -1.023,-2.194 c -2.834,-6.081 -14.604,-7.878 -21.136,-3.227 -2.683,1.91 -3.917,5.914 -2.633,8.54 1.426,2.917 4.913,4.267 14.937,5.785 15.151,2.294 20.789,4.433 25.686,9.746 5.739,6.226 6.561,17.348 1.944,26.273 -5.636,10.894 -23.998,16.93 -40.611,13.349 z m 85.938,0.366 c -20.582,-4.339 -32.964,-18.54 -33.949,-38.938 -0.655,-13.551 3.051,-23.738 11.781,-32.389 8.183,-8.108 18.194,-11.953 31.075,-11.934 17.378,0.025 31.223,8.111 38.1,22.251 2.75,5.654 4.02,11.059 4.528,19.273 l 0.432,6.987 h -32.824 c -36.922,0 -34.09,-0.468 -31.514,5.206 2.637,5.806 8.823,10.837 14.959,12.165 3.493,0.756 10.974,0.593 14.407,-0.313 3.744,-0.988 8.46,-3.645 9.758,-5.498 0.901,-1.286 1.599,-1.36 11.223,-1.183 l 10.263,0.189 -1.819,3.715 c -1,2.043 -3.506,5.547 -5.568,7.786 -7.885,8.561 -17.41,12.668 -30.335,13.08 -4.124,0.131 -8.858,-0.048 -10.519,-0.398 z m 30.629,-50.796 c 0,-3.848 -5.835,-10.517 -11.53,-13.177 -3.265,-1.525 -4.731,-1.779 -10.284,-1.779 -5.538,0 -7.019,0.255 -10.225,1.759 -5.21,2.444 -7.605,4.662 -10.112,9.365 -1.187,2.228 -2.159,4.237 -2.159,4.466 0,0.229 9.97,0.416 22.155,0.416 19.493,0 22.155,-0.126 22.155,-1.05 z m 61.692,50.485 c -15.192,-3.344 -26.1,-12.986 -30.805,-27.227 -1.554,-4.705 -1.823,-6.698 -1.845,-13.687 -0.029,-9.26 0.947,-13.522 4.765,-20.791 3.171,-6.039 6.949,-10.258 12.396,-13.845 8.048,-5.3 15.337,-7.385 25.714,-7.358 24.821,0.065 41.252,15.864 42.432,40.802 l 0.363,7.669 h -32.816 c -26.977,0 -32.816,0.163 -32.816,0.914 0,2.119 4.388,9.46 6.98,11.679 4.705,4.028 9.19,5.301 17.561,4.988 6.06,-0.227 7.68,-0.539 10.566,-2.04 1.875,-0.975 4.152,-2.569 5.061,-3.544 1.636,-1.754 1.755,-1.772 11.759,-1.772 5.558,0 10.106,0.187 10.106,0.416 0,1.732 -5.189,9.469 -8.717,12.997 -9.505,9.505 -26.322,13.967 -40.705,10.801 z m 32.014,-50.969 c -1.608,-5.389 -5.773,-9.837 -11.905,-12.713 -5.091,-2.388 -14.974,-2.529 -19.888,-0.283 -5.579,2.549 -12.15,9.971 -12.15,13.722 0,0.605 5.552,0.807 22.2,0.807 h 22.2 z m -359.774,72.896 h 8.251 l 3.547,1.195 2.315,2.352 1.195,2.352 1.195,3.509 v 5.899 l -1.195,3.509 -1.195,2.371 -2.315,2.352 -3.547,1.176 h -8.251 m 0,-24.715 v 24.715 m 24.715,0 h 15.307 m -15.307,-12.917 h 9.408 m -9.408,-11.797 h 15.307 m -15.307,0 v 24.715 m 52.939,-18.816 -1.195,-2.352 -2.352,-2.352 -2.352,-1.195 h -4.704 l -2.352,1.195 -2.352,2.352 -1.195,2.352 -1.157,3.509 v 5.899 l 1.157,3.509 1.195,2.371 2.352,2.352 2.352,1.176 h 4.704 l 2.352,-1.176 2.352,-2.352 1.195,-2.371 m 14.112,-18.816 -2.352,1.195 -2.352,2.352 -1.195,2.352 -1.157,3.509 v 5.899 l 1.157,3.509 1.195,2.371 2.352,2.352 2.352,1.176 h 4.704 l 2.352,-1.176 2.352,-2.352 1.195,-2.371 1.157,-3.509 v -5.899 l -1.157,-3.509 -1.195,-2.352 -2.352,-2.352 -2.352,-1.195 h -4.704 m 19.974,14.112 h 21.205 m 9.371,-2.315 h 16.501 m 0,-11.797 v 24.715 M 273.394,312.896 v 24.715 m 31.771,-24.715 -2.352,1.195 -2.352,2.352 -1.195,2.352 -1.157,3.509 v 5.899 l 1.157,3.509 1.195,2.371 2.352,2.352 2.352,1.176 h 4.704 l 2.352,-1.176 2.352,-2.352 1.195,-2.371 1.157,-3.509 v -5.899 l -1.157,-3.509 -1.195,-2.352 -2.352,-2.352 -2.352,-1.195 h -4.704 m 30.575,15.307 h 5.899 m 0,-9.408 -1.195,-2.352 -2.352,-2.352 -2.352,-1.195 h -4.704 l -2.352,1.195 -2.352,2.352 -1.195,2.352 -1.157,3.509 v 5.899 l 1.157,3.509 1.195,2.371 2.352,2.352 2.352,1.176 h 4.704 l 2.352,-1.176 2.352,-2.352 1.195,-2.371 v -3.509 m 8.214,9.408 h 15.307 m -15.307,-12.917 h 9.408 m -9.408,-11.797 h 15.307 m -15.307,0 v 24.715 m 37.632,-21.168 -2.352,-2.352 -3.547,-1.195 h -4.704 l -3.509,1.195 -2.352,2.352 v 2.352 l 1.157,2.352 1.195,1.157 2.352,1.195 7.056,2.352 2.352,1.157 1.157,1.195 1.195,2.352 v 3.528 l -2.352,2.352 -3.547,1.176 h -4.704 l -3.509,-1.176 -2.352,-2.352 m 41.179,-15.288 -1.195,-2.352 -2.352,-2.352 -2.352,-1.195 h -4.704 l -2.352,1.195 -2.352,2.352 -1.195,2.352 -1.157,3.509 v 5.899 l 1.157,3.509 1.195,2.371 2.352,2.352 2.352,1.176 h 4.704 l 2.352,-1.176 2.352,-2.352 1.195,-2.371 m 8.214,-7.019 h 16.501 m 0,-11.797 v 24.715 M 420.412,312.896 v 24.715 m 31.771,-24.715 -2.352,1.195 -2.352,2.352 -1.195,2.352 -1.157,3.509 v 5.899 l 1.157,3.509 1.195,2.371 2.352,2.352 2.352,1.176 h 4.704 l 2.352,-1.176 2.352,-2.352 1.195,-2.371 1.157,-3.509 v -5.899 l -1.157,-3.509 -1.195,-2.352 -2.352,-2.352 -2.352,-1.195 h -4.704 m 25.872,0 -2.352,1.195 -2.352,2.352 -1.195,2.352 -1.157,3.509 v 5.899 l 1.157,3.509 1.195,2.371 2.352,2.352 2.352,1.176 h 4.704 l 2.352,-1.176 2.352,-2.352 1.195,-2.371 1.157,-3.509 v -5.899 l -1.157,-3.509 -1.195,-2.352 -2.352,-2.352 -2.352,-1.195 h -4.704 m 19.973,0 v 24.715 m 0,0 h 14.112",
          box: { x: 0, y: 0, width: 512, height: 512 }
        }, {
          name: 'Odisee university of applied sciences logo',
          path: "m 0,239.76 c -0,-31.75 23.33,-55.07 56.37,-55.07 33.04,0 56.37,23.32 56.37,55.07 0,31.75 -23.33,55.07 -56.37,55.07 C 23.33,294.83 0,271.51 0,239.76 M 91.68,239.76 c 0,-20.73 -14.25,-35.8 -35.31,-35.8 -21.06,0 -35.31,15.06 -35.31,35.8 0,20.73 14.25,35.96 35.31,35.96 21.05,0 35.31,-15.22 35.31,-35.96 m 29.65,12.15 c 0,-27.37 20.41,-41.3 39.84,-41.3 11.5,0 21.05,4.86 26.72,13.77 V 177.73 h 19.27 v 74.35 c 0,25.91 -17.49,42.76 -42.6,42.76 -25.43,0 -43.24,-17.49 -43.24,-42.92 m 66.57,0.81 c 0,-14.09 -9.39,-24.14 -23.49,-24.14 -14.09,0 -23.65,10.04 -23.65,24.14 0,14.09 9.56,24.13 23.65,24.13 14.09,0 23.49,-10.04 23.49,-24.13 m 36.28,-40.01 h 19.28 v 80.01 h -19.28 z m -3.07,-23.16 c 0,-7.45 5.34,-12.96 12.79,-12.96 7.45,0 12.8,5.51 12.8,12.96 0,7.45 -5.35,12.8 -12.8,12.8 -7.45,0 -12.79,-5.35 -12.79,-12.8 m 36.28,79.53 h 19.44 c 0.16,5.34 4.86,8.91 14.25,8.91 9.88,0 14.09,-4.05 14.09,-8.91 0,-6.16 -7.13,-6.96 -15.72,-8.1 -12.31,-1.62 -30.45,-3.73 -30.45,-23.33 0,-16.36 12.47,-27.05 31.74,-27.05 19.6,0 31.59,11.01 32.07,25.11 h -19.11 c -0.49,-4.86 -5.02,-8.26 -12.64,-8.26 -8.42,0 -12.63,4.05 -12.63,8.75 0,6.15 7.29,7.13 15.87,8.26 10.69,1.45 30.29,3.56 30.29,23.48 0,16.2 -13.12,26.88 -33.53,26.88 -20.41,0 -33.2,-10.85 -33.69,-25.75 m 75.16,-16.36 c 0,-24.29 17.82,-42.11 43.09,-42.11 25.26,0 42.76,17.82 42.76,42.11 v 6.81 H 352.78 c 2.59,11.66 11.5,17.81 22.84,17.81 8.58,0 14.9,-2.43 18.95,-7.61 h 20.57 c -5.99,15.22 -20.57,25.1 -39.52,25.1 -25.27,0 -43.09,-17.82 -43.09,-42.11 m 65.43,-8.58 c -3.07,-10.69 -11.82,-16.04 -22.35,-16.04 -10.86,0 -19.28,5.51 -22.36,16.04 z m 28.19,8.58 c 0,-24.29 17.82,-42.11 43.09,-42.11 25.26,0 42.76,17.82 42.76,42.11 v 6.81 h -65.6 c 2.59,11.66 11.5,17.81 22.84,17.81 8.58,0 14.9,-2.43 18.95,-7.61 h 20.57 c -5.99,15.22 -20.57,25.1 -39.52,25.1 -25.27,0 -43.09,-17.82 -43.09,-42.11 m 65.43,-8.58 c -3.07,-10.69 -11.82,-16.04 -22.35,-16.04 -10.86,0 -19.28,5.51 -22.36,16.04 z M 1.36,314.22 v 15.14 l 1,3.03 1.97,2.02 2.97,1.01 h 1.94 l 2.97,-1.01 1.97,-2.02 1,-3.03 v -15.14 m 21.68,0 v 21.19 M 23.04,314.22 36.87,335.41 M 23.04,314.22 v 21.19 m 21.68,-21.19 v 21.19 m 20.71,-21.19 -7.88,21.19 m -7.88,-21.19 7.88,21.19 m 12.79,0 H 83.17 M 70.34,324.33 h 7.88 m -7.88,-10.12 h 12.83 m -12.83,0 v 21.19 m 25.62,-11.08 6.91,11.08 M 89.05,314.22 h 8.88 l 2.94,1.02 1,1.02 1,1.98 v 2.05 l -1,1.98 -1,1.02 -2.94,1.02 h -8.88 m 0,-10.12 v 21.19 m 33.53,-18.15 -1.97,-2.02 -2.97,-1.02 h -3.94 l -2.94,1.02 -1.97,2.02 v 2.02 l 0.97,2.02 1,0.99 1.97,1.02 5.91,2.02 1.97,0.99 0.97,1.02 1,2.02 v 3.03 l -1.97,2.02 -2.97,1.01 h -3.94 l -2.94,-1.01 -1.97,-2.02 m 20.68,-18.17 v 21.19 m 4.94,-21.19 h 13.8 m -6.91,0 v 21.19 m 24.65,-21.19 -7.88,10.12 m -7.88,-10.12 7.88,10.12 v 11.08 m 29.56,-21.19 -1.97,1.02 -1.97,2.02 -1,2.02 -0.97,3.01 v 5.06 l 0.97,3.01 1,2.03 1.97,2.02 1.97,1.01 h 3.94 l 1.97,-1.01 1.97,-2.02 1,-2.03 0.97,-3.01 v -5.06 l -0.97,-3.01 -1,-2.02 -1.97,-2.02 -1.97,-1.02 h -3.94 m 16.74,10.12 h 7.88 m -7.88,-10.12 h 12.83 m -12.83,0 v 21.19 m 29.56,-7.04 h 9.89 m -4.94,-14.15 7.88,21.19 m -7.88,-21.19 -7.88,21.19 m 20.68,-21.19 h 8.88 l 2.94,1.02 1,1.02 1,1.98 v 3.04 l -1,2.02 -1,1.02 -2.94,0.99 h -8.88 m 0,-11.11 v 21.19 m 20.71,-21.19 h 8.88 l 2.94,1.02 1,1.02 1,1.98 v 3.04 l -1,2.02 -1,1.02 -2.94,0.99 h -8.88 m 0,-11.11 v 21.19 m 20.71,0 h 11.82 m -11.82,-21.19 v 21.19 m 16.77,-21.19 v 21.19 m 7.88,0 h 12.83 m -12.83,-11.08 h 7.88 m -7.88,-10.12 h 12.83 m -12.83,0 v 21.19 m 18.71,-21.19 h 6.91 l 2.97,1.02 1.94,2.02 1,2.02 1,3.01 v 5.06 l -1,3.01 -1,2.03 -1.94,2.02 -2.97,1.01 h -6.91 m 0,-21.19 v 21.19 m 45.36,-18.15 -1.97,-2.02 -2.97,-1.02 h -3.94 l -2.94,1.02 -1.97,2.02 v 2.02 l 0.97,2.02 1,0.99 1.97,1.02 5.91,2.02 1.97,0.99 0.97,1.02 1,2.02 v 3.03 l -1.97,2.02 -2.97,1.01 h -3.94 l -2.94,-1.01 -1.97,-2.02 m 34.5,-13.11 -1,-2.02 -1.97,-2.02 -1.97,-1.02 h -3.94 l -1.97,1.02 -1.97,2.02 -1,2.02 -0.97,3.01 v 5.06 l 0.97,3.01 1,2.03 1.97,2.02 1.97,1.01 h 3.94 l 1.97,-1.01 1.97,-2.02 1,-2.03 m 6.88,-16.13 v 21.19 m 7.88,0 h 12.83 m -12.83,-11.08 h 7.88 m -7.88,-10.12 h 12.83 m -12.83,0 v 21.19 m 32.53,-21.19 v 21.19 m -13.83,-21.19 13.83,21.19 m -13.83,-21.19 v 21.19 m 35.51,-16.13 -1,-2.02 -1.97,-2.02 -1.97,-1.02 h -3.94 l -1.97,1.02 -1.97,2.02 -1,2.02 -0.97,3.01 v 5.06 l 0.97,3.01 1,2.03 1.97,2.02 1.97,1.01 h 3.94 l 1.97,-1.01 1.97,-2.02 1,-2.03 m 6.88,5.06 h 12.83 M 478.36,324.33 h 7.88 m -7.88,-10.12 h 12.83 m -12.83,0 v 21.19 m 31.53,-18.15 -1.97,-2.02 -2.97,-1.02 h -3.94 l -2.94,1.02 -1.97,2.02 v 2.02 l 0.97,2.02 1,0.99 1.97,1.02 5.91,2.02 1.97,0.99 0.97,1.02 1,2.02 v 3.03 l -1.97,2.02 -2.97,1.01 h -3.94 l -2.94,-1.01 -1.97,-2.02",
          box: { x: 0, y: 0, width: 512, height: 512 }
        },{
          name: 'OPT Logo hairline  O P T letters',
          path: "m 258.87496,177.13338 h -24.54822 v 0 c -50.84224,-1.02094 -68.198,-38.28481 -84.0224,-62.78709 -4.08371,-6.12557 -6.63604,-12.25114 -15.82439,-17.866237 -5.10464,-2.55232 -13.78253,-4.08372 -20.41857,-1.5314 -6.63602,2.55232 -10.20928,7.146497 -12.25114,11.230217 -3.062783,4.59417 -5.615103,9.69881 -7.656963,15.82438 -2.04186,-5.10464 -4.08371,-9.69882 -6.12557,-13.78253 -4.08371,-8.677887 -8.67789,-16.334847 -18.37671,-20.929027 -3.06278,-1.5314 -7.1465,-2.55232 -11.2302,-2.55232 v 0 c -2.04186,0 -4.08372,0 -5.61512,0.51046 -5.6151,1.5314 -9.69882,4.59418 -12.7616,7.1465 -12.7616,12.251137 -16.84531,28.075527 -22.46042,48.494097 -5.10464,20.92903 -9.1883598,45.94177 -12.2511398,72.4859 -5.61510002,53.59874 -6.63603,113.37409 0.51046,155.79366 4.08372,21.23531 8.1674298,39.20365 23.4813598,50.94432 5.6151,4.59418 13.78252,7.1465 21.94996,7.1465 2.55232,0 5.10464,-0.51046 7.65696,-1.02092 9.69882,-3.06279 17.35578,-9.18836 25.01274,-17.86625 v 0 c 23.991823,-26.23786 52.577813,-58.49919 80.653353,-84.1245 27.56506,-25.31902 55.79371,-42.47061 72.58799,-44.51247 h 21.60794 v -35.73249 c -8.28483,0.51046 -16.40121,0 -24.67073,0 -33.28227,3.06278 -63.91011,26.54414 -93.51703,53.80293 -30.11738,27.56506 -59.213843,60.64313 -83.205663,86.62576 -3.06278,3.62429 -5.6151,5.25778 -7.1465,6.22766 -1.53138,-3.57324 -6.63602,-13.4252 -9.18834,-27.7182 -6.12558,-35.83459 -5.61512,-94.43587 0,-145.48229 2.55232,-25.5232 6.63602,-49.51502 11.2302,-67.89173 2.04186,-7.1465 4.08372,-13.78252 6.63604,-18.88717 4.59418,12.76161 10.20928,34.71156 15.82438,66.8708 -7.1465,31.13832 -9.18835,55.64059 -9.18835,72.99638 0.51047,9.18835 1.02093,16.33485 3.06279,23.12402 1.02092,3.26697 2.04186,6.43185 4.59418,10.0051 2.55232,3.62429 8.16742,8.88207 16.33484,9.13731 8.16743,0.25523 13.782543,-4.64522 16.845323,-8.11638 2.55232,-3.42011 4.08372,-6.48289 5.10464,-9.64778 2.55232,-6.63603 3.57325,-13.78252 4.08372,-22.97088 1.53139,-17.35578 0.51046,-41.85806 -4.59418,-73.50684 6.12557,-25.52321 11.23021,-43.89991 14.80346,-56.15106 16.33485,25.52321 48.4941,70.44405 110.66863,70.44405 v 0 h 22.28686 l 0.11741,-35.73248 m 33.49155,0 v 35.73248 h 33.5375 167.94271 v 0 c 3.06278,0 5.61511,-1.02092 8.16741,-2.55232 3.06278,-1.53139 5.10466,-3.57324 6.63604,-6.63603 1.5314,-2.55232 2.55233,-5.61511 2.55233,-8.67789 0,-3.57324 -1.02093,-6.12556 -2.55233,-9.18836 -1.53138,-2.55232 -3.57326,-5.10464 -6.63604,-6.63602 -2.5523,-1.5314 -5.61508,-2.04186 -8.67789,-2.04186 v 0 c -1.02093,0 -1.53138,0 -2.04185,0 H 325.90402 292.36651 m 0,66.8708 v 35.73249 h 22.30728 11.23023 165.90084 c 0,0 0.51045,0 1.02093,0 3.06278,0 6.12556,-0.51046 9.18834,-2.04186 2.55233,-2.04186 4.59418,-4.08371 6.12559,-6.63603 2.04185,-3.06279 2.5523,-5.61511 2.5523,-9.18835 0,-3.06279 -0.51045,-6.12557 -2.5523,-8.6779 -1.53141,-3.06278 -3.57326,-5.10464 -6.12559,-6.63603 -3.06278,-1.53139 -6.12556,-2.55232 -9.18834,-2.55232 -0.51048,0 -1.02093,0 -1.5314,0 H 325.90402 314.67379 292.36651 m -13.68044,-95.96725 a 20.92903,20.92903 0 0 1 -1.78662,0 20.92903,20.92903 0 0 1 -20.90862,-20.92904 20.92903,20.92903 0 0 1 20.90862,-20.92902 20.92903,20.92903 0 0 1 21.08217,20.92902 v 0 a 20.92903,20.92903 0 0 1 -19.29555,20.92904 M 264.0868,360.69629 v -38.54005 c 22.6646,-5.76824 44.46143,23.02194 0,25.01275 m -4.11434,42.52166 h 33.92544 m -16.84532,0.20419 v 33.28226",
          box: { x: 0, y: 0, width: 512, height: 512 }
        }, {
          name: 'UDG logo full',
          path: "m 1.0009504,139.28679 c 0,-20.91108 10.7824596,-35.87575 28.1713596,-35.87575 H 78.0265 c 14.08567,0 19.80383,-7.70132 22.00597,-18.26481 h 2.20214 c 2.20214,10.56349 7.92338,18.26481 22.00907,18.26481 h 48.86035 c 17.38273,0 28.17136,14.96467 28.17136,35.87575 M 6.34255,166.88933 v 47.70489 l 3.227392,9.53089 6.353928,6.35393 9.58132,3.17696 h 6.253072 l 9.58132,-3.17696 6.353928,-6.35393 3.227392,-9.53089 V 166.88933 M 76.23575,189.1785 v 44.4775 m 0,-31.76964 9.581318,-9.58132 6.353928,-3.12654 h 9.480464 l 6.45478,3.12654 3.12654,9.58132 V 233.656 m 25.31477,-63.53928 v -6.35393 m 0,25.41571 v 44.4775 m 19.16293,-44.4775 18.96093,44.4775 m 19.16264,-44.4775 -19.16264,44.4775 m 34.9966,-25.41571 h 38.12357 v -6.35393 l -3.12653,-6.35393 -3.2274,-3.22739 -6.35392,-3.12654 h -9.58132 l -6.25308,3.12654 -6.45478,6.45478 -3.12654,9.48047 v 6.35393 l 3.12654,9.53089 6.45478,6.35393 6.25308,3.17696 h 9.58132 l 6.35392,-3.17696 6.35393,-6.35393 m 22.18897,-34.94661 v 44.4775 m 0,-25.41571 3.22739,-9.48047 6.35393,-6.45478 6.35393,-3.12654 h 9.48046 m 47.80578,9.58132 -3.22739,-6.45478 -9.48046,-3.12654 h -9.58132 l -9.58132,3.12654 -3.12654,6.45478 3.12654,6.25308 6.45478,3.22739 15.83439,3.22739 6.35393,3.12654 3.22739,6.35392 v 3.17697 l -3.22739,6.35393 -9.48046,3.17696 h -9.58132 l -9.58132,-3.17696 -3.12654,-6.35393 m 57.18454,-54.00839 v -6.35393 m 0,25.41571 v 44.4775 m 28.64339,-66.76667 v 54.05881 l 3.2274,9.5309 6.25307,3.17696 h 6.45478 m -25.41571,-44.4775 h 22.18832 m 57.18579,0 v 44.4775 m 0,-34.89618 -6.35393,-6.45478 -6.35393,-3.12654 h -9.58132 l -6.25307,3.12654 -6.45479,6.45478 -3.12653,9.48047 v 6.35393 l 3.12653,9.53089 6.45479,6.35393 6.25307,3.17696 h 9.58132 l 6.35393,-3.17696 6.35393,-6.35393 m 28.54235,-57.23578 v 54.05881 l 3.2274,9.5309 6.25307,3.17696 h 6.45478 M 482.98848,189.1785 H 505.1768 M 41.339582,267.74533 V 334.512 m 0,-34.89618 -6.353928,-6.45478 -6.353928,-3.12654 h -9.58132 l -6.253072,3.12654 -6.454784,6.45478 -3.126536,9.48047 v 6.35393 l 3.126536,9.53089 6.454784,6.35393 6.253072,3.17696 h 9.58132 l 6.353928,-3.17696 6.353928,-6.35393 m 22.188332,-15.88482 h 38.123566 v -6.35393 l -3.126536,-6.35393 -3.227392,-3.22739 -6.353928,-3.12654 h -9.581318 l -6.253072,3.12654 -6.454784,6.45478 -3.126536,9.48047 v 6.35393 l 3.126536,9.53089 6.454784,6.35393 6.253072,3.17696 h 9.581318 l 6.353928,-3.17696 6.353928,-6.35393 m 104.89042,-41.30053 -3.22739,-6.35393 -6.35393,-6.35393 -6.35393,-3.22739 H 177.8988 l -6.35393,3.22739 -6.35393,6.35393 -3.22739,6.35393 -3.12654,9.48046 v 15.93525 l 3.12654,9.48046 3.22739,6.40436 6.35393,6.35393 6.35393,3.17696 h 12.70785 l 6.35393,-3.17696 6.35393,-6.35393 3.22739,-6.40436 v -9.48046 m -15.93525,0 h 15.93525 m 22.18765,-38.12357 v -6.35393 m 0,25.41571 v 44.4775 m 25.416,-44.4775 v 44.4775 m 0,-25.41571 3.22739,-9.48047 6.35393,-6.45478 6.35393,-3.12654 h 9.48046 m 28.64315,0 -6.25308,3.12654 -6.45478,6.45478 -3.12654,9.48047 v 6.35393 l 3.12654,9.53089 6.45478,6.35393 6.25308,3.17696 h 9.58132 l 6.35392,-3.17696 6.35393,-6.35393 3.12654,-9.53089 v -6.35393 l -3.12654,-9.48047 -6.35393,-6.45478 -6.35392,-3.12654 h -9.58132 m 47.60414,0 v 44.4775 m 0,-31.76964 9.58132,-9.58132 6.35393,-3.12654 h 9.48046 l 6.45479,3.12654 3.12653,9.58132 V 334.512 m 60.312,-44.4775 v 44.4775 m 0,-34.89618 -6.35393,-6.45478 -6.35393,-3.12654 h -9.58132 l -6.25307,3.12654 -6.45478,6.45478 -3.12654,9.48047 v 6.35393 l 3.12654,9.53089 6.45478,6.35393 6.25307,3.17696 h 9.58132 l 6.35393,-3.17696 6.35393,-6.35393 m -249.89615,47.7321 c 0,20.90798 -10.78556,35.86958 -28.17136,35.86958 h -48.85728 c -14.08569,0 -19.81,7.70441 -22.01214,18.27098 H 99.98158 C 97.77944,416.2872 92.06128,408.58279 77.97561,408.58279 H 29.11832 c -17.3858,0 -28.17133964,-14.9616 -28.17133964,-35.86958",
          box: { x: 0, y: 0, width: 512, height: 512 }
        }, {
          name: 'UDG logo reduced lofi',
          path: "m 75.995848,180.50081 v 97.65833 l 6.606906,19.51102 13.007346,13.00735 19.61425,6.50366 h 12.80088 l 19.61425,-6.50366 13.00734,-13.00735 6.60691,-19.51102 v -97.65833 m 122.69606,65.11206 -13.00734,-13.2138 -13.00735,-6.40045 h -19.61425 l -12.80088,6.40045 -13.21381,13.2138 -6.40044,19.4078 v 13.00735 l 6.40044,19.51102 13.21381,13.00735 12.80088,6.50366 h 19.61425 l 13.00735,-6.50366 13.00734,-13.00735 m 0,-117.16935 v 136.68036 m 147.57219,-104.05876 -6.6069,-13.00735 -13.00735,-13.00735 -13.00735,-6.6069 H 378.8857 l -13.00735,6.6069 -13.00735,13.00735 -6.6069,13.00735 -6.40045,19.40778 v 32.6216 l 6.40045,19.40778 6.6069,13.11059 13.00735,13.00735 13.00735,6.50366 h 26.01468 l 13.00735,-6.50366 13.00735,-13.00735 6.6069,-13.11059 v -19.40778 m -15.06587,-0.0368 h 25.61251 M 51.060877,111.99469 c 0,-42.807794 22.073144,-73.442488 57.670553,-73.442488 h 100.01111 c 28.83526,0 40.5411,-15.765639 45.04918,-37.3905249 h 4.50808 c 4.50807,21.6248859 16.22022,37.3905249 45.05553,37.3905249 h 100.02371 c 35.58479,0 57.67057,30.634694 57.67057,73.442488 m -0.11047,288.01062 c 0,42.80145 -22.07949,73.42986 -57.67056,73.42986 H 303.25115 c -28.83531,0 -40.55374,15.77196 -45.06182,37.40315 h -4.50179 c -4.50808,-21.63119 -16.21392,-37.40315 -45.04918,-37.40315 H 108.62091 c -35.591067,0 -57.670523,-30.62841 -57.670523,-73.42986",
          box: { x: 0, y: 0, width: 512, height: 512 }
        }, {
          name: 'UDG logo reduced hifi',
          path: "M 253.3874,509.03614 C 248.6857,493.079 240.21426,483.32193 226.38184,477.93222 l -7.46901,-2.91026 -65.75945,-0.94698 -65.759461,-0.94697 -6.931681,-4.5136 C 62.05613,456.62921 48.457399,430.48846 48.457399,407.09174 v -5.77998 h 5.191536 5.191536 v 4.10871 c 0,12.39603 8.995501,26.03197 21.6314,32.79022 l 6.922048,3.70222 68.355231,0.8982 68.35522,0.8982 4.32628,2.59577 c 12.07705,7.24622 25.95187,26.90325 25.95631,36.77337 0.003,5.61351 2.62992,3.08499 5.66034,-5.44734 4.92164,-13.85718 13.46324,-24.68149 23.69398,-30.0261 l 9.11354,-4.76096 59.07242,-0.01 c 86.43505,-0.0147 96.11682,-3.40467 102.5241,-35.89811 l 1.10901,-5.62416 h 4.35847 4.35847 l -1.12999,12.54621 c -2.04617,22.71838 -12.06483,41.5047 -27.97973,52.46572 -11.34786,7.81557 -10.34331,7.7143 -82.14005,8.28044 l -59.70267,0.47078 -6.42244,2.32473 c -12.45508,4.50838 -27.32254,21.92737 -27.32254,32.0116 0,3.66058 -5.09429,3.35199 -6.19247,-0.3751 z M 101.62328,318.28859 C 84.215544,315.13321 71.822757,303.78204 66.50896,286.12563 l -2.476953,-8.23029 v -41.04536 -41.04537 l -2.606434,-2.16315 c -1.433539,-1.18973 -5.132508,-2.67556 -8.219933,-3.30184 l -5.613497,-1.13868 -0.551473,-4.73778 -0.551473,-4.73777 30.835434,0.47304 30.835429,0.47304 v 4.32628 4.32629 l -5.19154,0.5712 c -2.85534,0.31416 -6.943672,2.20204 -9.08518,4.1953 l -3.893652,3.6241 0.0096,39.0675 c 0.0147,59.48848 4.671036,68.32255 35.841892,67.99961 l 12.6235,-0.13078 7.19944,-4.01759 c 4.48975,-2.50548 8.55662,-6.62289 10.80534,-10.93965 l 3.60591,-6.92204 0.54327,-41.87195 c 0.6128,-47.23099 0.43662,-48.07364 -10.50086,-50.22291 l -7.34754,-1.44383 -0.54757,-4.7134 -0.54757,-4.71338 h 26.18758 26.18756 l -0.54757,4.74411 c -0.36579,3.1691 -1.69661,4.92487 -4.00859,5.2886 -14.77802,2.32489 -14.65624,1.90481 -14.68573,50.65375 l -0.0236,39.05506 -2.54606,8.53402 c -3.45926,11.59495 -11.40485,20.64334 -22.90453,26.08356 l -9.59994,4.54149 -14.92183,0.54016 c -8.20701,0.2971 -18.64212,-0.13418 -23.18914,-0.95838 z m 128.81995,-0.28598 c -36.19682,-10.4235 -34.85421,-81.9886 1.8907,-100.78064 l 9.86133,-5.04327 12.3208,0.052 12.3208,0.052 4.95399,3.66265 c 6.91879,5.11528 6.82614,5.25965 6.81132,-10.61409 l -0.0134,-14.27672 -6.90872,-3.94532 c -3.87356,-2.21204 -6.90871,-5.26002 -6.90871,-6.93787 v -2.99256 l 15.14197,-4.08216 c 8.32809,-2.24519 16.46982,-4.46126 18.09271,-4.9246 l 2.95074,-0.84244 0.51029,66.87069 0.51029,66.8707 2.59577,1.63956 c 1.42767,0.90175 4.73728,1.65147 7.35468,1.66605 l 4.75891,0.0265 v 5.01389 5.01389 l -10.8157,1.81008 c -5.94864,0.99554 -14.51467,2.332 -19.03564,2.9699 l -8.21993,1.15982 v -7.98379 c 0,-9.57373 -0.21272,-9.62447 -8.12697,-1.93824 -9.24396,8.97761 -24.86733,11.92474 -40.0453,7.55397 z m 40.76526,-17.43582 7.68143,-3.83629 -0.56983,-29.47607 -0.56985,-29.47606 -3.53173,-6.01178 c -9.78076,-16.649 -33.32361,-12.03941 -42.44943,8.31142 l -3.62481,8.08343 -0.0636,13.8441 c -0.15249,33.17936 19.22058,50.50111 43.12784,38.56125 z m 106.0462,17.33895 c -65.8357,-16.51089 -62.33235,-119.73707 4.6528,-137.09467 18.25967,-4.73156 44.02528,-1.94332 57.213,6.19132 l 5.62416,3.46918 v 15.43346 15.43347 h -5.02225 -5.02224 l -1.95865,-5.62416 C 417.2579,171.25374 365.21447,184.8967 358.47648,235.1826 l -1.73909,12.97884 2.22103,14.70936 c 5.58723,37.00288 36.28138,58.23405 60.88421,42.11366 l 4.13588,-2.70994 -0.0265,-16.67347 c -0.0146,-9.1704 -0.59862,-17.53029 -1.29789,-18.57754 -1.88658,-2.82543 -8.33456,-5.88323 -12.40594,-5.88323 h -3.5748 v -4.32628 -4.32627 h 29.41871 29.41871 v 4.32627 4.32628 h -4.86079 c -2.67342,0 -6.37239,1.10274 -8.21993,2.45053 l -3.35915,2.45054 -0.86525,20.47864 -0.86526,20.47864 -8.51452,4.59183 c -14.56044,7.85235 -43.57557,10.8284 -61.57121,6.31528 z M 48.932566,98.904781 C 50.809854,72.941492 63.441389,52.088787 83.067639,42.553069 l 7.787305,-3.783582 64.894206,-0.947765 64.89419,-0.947764 6.66162,-2.597236 c 9.84859,-3.839782 19.10462,-13.95315 22.84709,-24.9633207 3.39304,-9.98217842 6.6661,-12.0956286 8.65214,-5.586784 9.51961,31.1986227 14.11205,32.8000057 97.68435,34.0625207 l 64.8942,0.980349 6.05679,3.271867 c 20.49521,11.071474 32.57231,31.380996 35.43163,59.583786 l 1.10918,10.9403 -4.67237,-0.55722 -4.67238,-0.55723 -2.30486,-9.04853 C 449.09657,89.705565 442.57271,80.195444 433.92968,75.57841 l -7.3554,-3.929194 -67.48997,-0.915123 -67.48998,-0.915123 -7.78729,-3.618726 c -4.28303,-1.990299 -10.1235,-6.640241 -12.97884,-10.333205 -4.88533,-6.318436 -6.97232,-10.192123 -13.40696,-24.884857 l -2.65256,-6.056792 -1.30452,5.191536 c -4.09763,16.307281 -15.25523,31.114839 -27.62928,36.667601 l -6.92205,3.106216 -67.48997,0.879237 -67.489964,0.879236 -6.730255,3.999357 c -10.366362,6.16006 -20.092683,22.309039 -20.092683,33.360637 0,2.42151 -1.224662,3.30703 -4.573557,3.30703 h -4.573558 z",
          box: { x: 0, y: 0, width: 512, height: 512 }
        }, {
          name: 'UPV logo',
          path: "m 337.01939,119.8498 a 5.1552553,5.1552553 0 0 1 -5.15525,5.15526 5.1552553,5.1552553 0 0 1 -5.15526,-5.15526 5.1552553,5.1552553 0 0 1 5.15526,-5.15526 5.1552553,5.1552553 0 0 1 5.15525,5.15526 z m 107.78905,89.12903 c 0.52295,2.4452 0.99584,4.88125 1.41207,7.30729 -0.22234,-1.29592 -0.46085,-2.59472 -0.71452,-3.89625 13.56716,1.30736 27.14391,3.17249 40.69291,5.73246 -0.70552,0.30557 -1.41175,0.60904 -2.1187,0.91043 -7.25389,3.09075 -14.58324,5.99264 -22.01161,8.46107 -0.15699,-1.99039 -0.38369,-4.02639 -0.65033,-6.10746 -0.31437,-2.44199 -0.68575,-4.88543 -1.1086,-7.32961 0.42285,2.44418 0.79423,4.88762 1.1086,7.32961 0.2719,2.12208 0.50226,4.19732 0.65953,6.22513 -2.76209,0.90095 -5.53753,1.74275 -8.32746,2.51329 -1.99042,0.61616 -3.98071,1.15502 -5.9715,1.56315 -0.0147,-0.35444 -0.0289,-0.79217 -0.0363,-1.31262 -0.0329,-0.67531 -0.0789,-1.36663 -0.13594,-2.07384 0.0571,0.70721 0.10304,1.39853 0.13594,2.07384 0.0245,1.72155 0.12349,2.53792 0.0679,2.4292 m 34.87348,-34.71874 -11.58394,2.16298 5.49944,-1.02686 c 0.54033,-1.00133 1.07425,-2.00816 1.60192,-3.02003 0.48723,-0.92703 0.96921,-1.85833 1.44605,-2.79354 0.21089,-0.7304 0.41862,-1.46235 0.62324,-2.19563 0.0589,-0.21044 0.1175,-0.42098 0.17587,-0.63169 -0.14147,-1.00036 -0.28896,-2.00083 -0.44256,-3.00135 -0.31536,-0.91749 -0.63588,-1.83354 -0.96157,-2.74798 -0.71769,-0.91781 -1.44062,-1.83011 -2.16868,-2.73695 -1.15123,-0.80406 -2.30636,-1.59843 -3.46519,-2.38279 -1.64646,-0.42644 -3.29339,-0.84099 -4.94055,-1.2435 -1.5958,-0.11793 -3.1908,-0.2281 -4.78492,-0.33056 -1.5525,0.27199 -3.10442,0.54613 -4.65575,0.82241 -1.91359,0.56129 -3.82749,1.12172 -5.7417,1.68125 -1.52348,0.73237 -3.04931,1.45966 -4.57743,2.18187 -1.25378,0.92349 -2.51239,1.839 -3.77564,2.74648 -1.01419,1.33912 -2.03969,2.66549 -3.076,3.97918 -0.36359,1.35667 -0.73923,2.7067 -1.12647,4.04994 0.47356,1.84548 0.9249,3.69647 1.3544,5.55212 0.0247,0.0318 0.0493,0.0636 0.074,0.0954 0.6568,0.85422 1.30874,1.71132 1.95539,2.57159 0.77771,0.5425 1.5534,1.08901 2.3269,1.6397 0.79971,0.35369 1.59859,0.71091 2.39656,1.07183 M 432.8004,170.86132 c 1.06076,2.58385 2.07182,5.18959 3.03406,7.81461 -0.46635,-1.2722 -0.94416,-2.53985 -1.43354,-3.80273 l 37.34751,-11.64517 c 0.58239,1.49784 1.14975,3.00002 1.7022,4.50619 -1.08895,-2.96891 -2.23587,-5.92225 -3.4416,-8.85755 M 418.7582,142.56153 c 1.31547,2.16206 2.58722,4.3501 3.81592,6.56217 -0.5721,-1.02996 -1.15352,-2.05471 -1.74435,-3.07405 l 34.58399,-16.07956 c -0.81888,-1.41383 -1.65367,-2.82086 -2.50451,-4.22074 0.94882,1.5611 1.8777,3.13108 2.78679,4.70948 -8.24024,11.18871 -17.24095,21.63738 -26.85434,31.3627 0.65635,1.40762 1.29696,2.82294 1.92201,4.24553 -0.54422,-1.23864 -1.10024,-2.47176 -1.66818,-3.69908 l 36.32922,-13.5335 c -0.57608,-1.23995 -1.16317,-2.47604 -1.76135,-3.70809 1.28472,2.64611 2.51833,5.31087 3.70149,7.99235 m -17.55374,-33.28626 -10.22575,5.32856 4.85464,-2.52972 c 0.1129,-0.78698 0.22101,-1.57624 0.32428,-2.36776 0.0416,-0.31987 0.0823,-0.64014 0.12216,-0.96077 0.13065,-1.02207 0.25281,-2.04798 0.36625,-3.07767 -0.0831,-0.97547 -0.17447,-1.95295 -0.27425,-2.93238 -0.50236,-0.91579 -1.01262,-1.82931 -1.53085,-2.74039 -0.64047,-0.78479 -1.28692,-1.56561 -1.93933,-2.34229 -1.02437,-0.66484 -2.05276,-1.32056 -3.08496,-1.96696 -1.39267,-0.42304 -2.78531,-0.83183 -4.17749,-1.22617 -1.71456,0.0916 -3.42337,0.19882 -5.12599,0.3218 -1.5453,0.37547 -3.08542,0.76062 -4.62015,1.15551 -1.35281,0.73291 -2.70371,1.46833 -4.05268,2.20627 -1.58065,1.11575 -3.16217,2.23048 -4.74457,3.34419 -1.15261,1.15202 -2.31104,2.29842 -3.4752,3.43922 -0.83408,1.24062 -1.67873,2.47293 -2.53366,3.69691 -0.46711,1.54222 -0.95549,3.07299 -1.46427,4.59216 0.13597,1.35175 0.25336,2.70036 0.35287,4.04551 1.08008,1.54359 2.13595,3.10442 3.16792,4.68102 0.94403,0.60862 1.88535,1.22734 2.82372,1.85593 0.77519,0.23141 1.55069,0.46799 2.32639,0.70967 0.14517,0.0455 0.29033,0.0911 0.43549,0.13699 0.87922,0.10016 1.75928,0.2054 2.64012,0.31571 m -14.64909,-25.04545 -6.7427,4.90615 c -2.92354,-3.22898 -5.97337,-6.33547 -9.15149,-9.30089 -1.47758,-1.38124 -2.98434,-2.73592 -4.51902,-4.06232 1.03661,0.89592 2.06048,1.80475 3.07123,2.72595 L 402.0758,92.351251 c 0.54509,0.497359 1.08664,0.997877 1.62458,1.501505 2.50441,2.343479 4.93255,4.755897 7.28512,7.230754 l 3.72927,-2.845478 -7.41305,5.656258 3.68378,-2.81078 c -2.35257,-2.474857 -4.78071,-4.887275 -7.28512,-7.230754 -0.5704,-0.534008 -1.14483,-1.064525 -1.72327,-1.591477 l 13.7223,-12.084662 c -1.10439,-1.006956 -2.22238,-2.002296 -3.35372,-2.985671 1.78689,1.553191 3.54049,3.136231 5.25976,4.747729 3.85027,3.610957 7.52859,7.353726 11.03685,11.210734 l -6.43837,4.698425 m 4.17551,-23.535429 c -0.0628,0.282539 -0.12633,0.564788 -0.19044,0.846744 -0.5784,2.527288 -1.207,5.029614 -1.88381,7.506796 m -54.36055,8.135134 c 2.29694,1.54174 4.54952,3.145144 6.75463,4.805951 -1.16616,-0.878312 -2.3456,-1.740565 -3.53786,-2.586137 l 24.2913,-27.525979 c -3.51829,-2.490983 -7.13548,-4.873332 -10.84561,-7.138879 l -4.98018,6.545001 4.98018,-6.545001 c 7.4992,4.5793 14.6187,9.635804 21.30919,15.102002 L 401.956,79.312689 M 352.75085,80.848 c 0.76255,0.377591 1.52054,0.761301 2.27379,1.151129 1.71758,0.880941 3.41683,1.796041 5.09669,2.743854 -1.17229,-0.661431 -2.35402,-1.30693 -3.54483,-1.936001 l 20.11519,-30.479943 c 1.56019,0.827066 3.10616,1.674233 4.63751,2.540977 -2.17526,-1.231198 -4.38002,-2.4229 -6.61314,-3.57358 -0.86652,-0.445278 -1.73677,-0.88411 -2.61063,-1.316502 M 344.11505,38.670633 c 3.64683,1.171311 7.25727,2.439468 10.8243,3.80484 -1.90177,-0.727956 -3.81589,-1.428273 -5.74128,-2.101015 l -14.28229,32.836805 c -1.30569,-0.454479 -2.6198,-0.893713 -3.94169,-1.317738 6.13828,1.968982 12.10891,4.265963 17.84671,6.894385 l 3.7595,-6.596145 m -39.93021,-4.598497 c 0.81618,0.170689 1.63064,0.346666 2.44325,0.527943 1.49523,-0.361708 3.00356,-0.705644 4.52448,-1.031035 1.15904,-0.769845 2.33342,-1.529401 3.52299,-2.278197 1.14892,-1.038331 2.31514,-2.067145 3.4986,-3.08599 0.87501,-1.290357 1.76079,-2.57633 2.65735,-3.857779 0.74969,-1.678403 1.50428,-3.355227 2.26377,-5.030439 0.3531,-2.015684 0.69365,-4.034061 1.02166,-6.055018 -0.1113,-1.395853 -0.23595,-2.793045 -0.3739,-4.191409 -0.40422,-1.228002 -0.82364,-2.45571 -1.2582,-3.682851 -0.89792,-1.049776 -1.8138,-2.094237 -2.74741,-3.132954 -0.98127,-0.643535 -1.97198,-1.280448 -2.97195,-1.910547 -1.16377,-0.42774 -2.33327,-0.846198 -3.50826,-1.255282 -1.40648,-0.135148 -2.81251,-0.256934 -4.21772,-0.365488 -0.069,-0.0053 -0.13796,-0.01052 -0.20693,-0.01573 -1.64656,0.330081 -3.28036,0.677138 -4.90161,1.040553 -1.18786,0.780803 -2.36169,1.570107 -3.52172,2.367607 -1.16903,1.284747 -2.31861,2.577507 -3.44907,3.877939 -0.65572,1.332481 -1.30257,2.667276 -1.94063,4.004318 -0.3505,1.430949 -0.69862,2.862289 -1.04439,4.294015 -0.10837,1.518378 -0.22044,3.036414 -0.33621,4.554091 0.12184,1.262049 0.2366,2.523932 0.34422,3.785611 0.34691,1.025259 0.68463,2.051235 1.01307,3.077875 0.5372,1.105397 1.06015,2.212818 1.56858,3.322128 0.71681,0.802575 1.42111,1.609137 2.11262,2.419613 0.7819,0.4616 1.55653,0.928178 2.3237,1.399756 0.18822,0.115544 0.37602,0.231362 0.5634,0.347458 0.87742,0.285247 1.75092,0.576534 2.62031,0.873815 z m -41.56666,-4.618721 c 3.11792,0.03031 6.22263,0.11654 9.31054,0.262518 -1.58724,-0.07504 -3.17892,-0.134286 -4.77456,-0.178268 l 1.27202,-35.081416 c -1.72413,-0.05102 -3.44805,-0.08653 -5.17138,-0.106942 5.97616,0.07079 11.95933,0.323176 17.93384,0.773876 0.83714,0.242149 1.67201,0.488168 2.50451,0.738079 0.81583,0.570961 1.62535,1.145599 2.42837,1.723889 0.54562,0.733197 1.08501,1.468026 1.61806,2.204445 0.23953,1.047448 0.47353,2.0951 0.70195,3.142933 L 296.4,40.278362 c -0.37912,1.378246 -0.75412,2.757189 -1.12503,4.136811 -0.68403,0.952209 -1.3597,1.907281 -2.02712,2.865127 -0.89217,0.46979 -1.77806,0.944606 -2.65775,1.424295 -0.99237,0.07583 -1.98346,0.157824 -2.97325,0.245842 -3.76056,-0.277576 -7.53714,-0.468527 -11.32449,-0.57845 m -43.0326,16.777964 c 3.04516,-0.372195 6.10583,-0.698583 9.17886,-0.981469 -1.62516,0.149607 -3.24686,0.311376 -4.86465,0.485651 l -4.66408,-34.859266 c -4.3608,0.467804 -8.71521,1.021426 -13.05716,1.665292 l 1.44206,7.819791 -1.44206,-7.819791 c 8.52006,-1.26344 17.08808,-2.17937 25.65824,-2.781358 0.25818,-0.01858 0.51641,-0.03686 0.7747,-0.05483 l 0.67597,7.900245 m -53.36869,36.407987 c 2.59216,-0.754658 5.20887,-1.462689 7.84773,-2.125843 -1.40962,0.35424 -2.81293,0.72129 -4.20954,1.101408 -0.24093,-12.206485 0.23392,-24.508333 1.37256,-36.859662 4.77498,6.64 9.29514,13.381229 13.57107,20.2091 -5.02059,0.957749 -9.99515,2.053382 -14.91095,3.296229 4.96036,-1.254116 9.98054,-2.35833 15.04748,-3.322235 2.44724,3.957729 4.81405,7.943723 7.10241,11.955252 -1.45203,0.251373 -2.89926,0.514383 -4.34132,0.789288 2.74135,-0.522594 5.50136,-1.002186 8.27753,-1.44059 m -46.88335,12.361001 c 2.71864,-1.05142 5.46852,-2.047771 8.24521,-2.988813 -1.46844,0.497665 -2.92938,1.0108 -4.38217,1.539369 L 165.5977,44.925412 c -4.11796,1.496853 -8.18937,3.102415 -12.20574,4.816229 l 3.80195,7.15428 -3.80195,-7.15428 c 6.92101,-2.953246 14.00547,-5.58503 21.20989,-7.893076 1.24551,-0.398362 2.49403,-0.787312 3.74539,-1.166964 l 2.84094,7.500549 m -23.62866,39.19842 c 2.54883,-1.316004 5.13965,-2.577288 7.76799,-3.783604 -1.27381,0.584633 -2.53881,1.182178 -3.79449,1.792609 L 142.6598,54.279657 c 1.57642,-0.767961 3.16298,-1.518427 4.75911,-2.251372 -3.14623,1.444745 -6.25523,2.957577 -9.32277,4.538273 m -2.12303,44.022052 -7.19631,-8.037694 3.55143,3.966653 c 0.85811,0.101588 1.71311,0.208937 2.56488,0.322024 1.35476,0.04506 2.70271,0.105497 4.04342,0.181256 1.26125,-0.291013 2.52136,-0.566786 3.77987,-0.827242 0.12659,-0.07425 0.25328,-0.148344 0.38007,-0.222267 1.02172,-0.598782 2.05132,-1.187436 3.08847,-1.765972 0.69683,-0.906812 1.40861,-1.809723 2.13508,-2.708479 0.22535,-1.143475 0.46721,-2.289101 0.72549,-3.436564 -0.26446,-1.043947 -0.52161,-2.090576 -0.77145,-3.139818 -0.76093,-1.235967 -1.51989,-2.472979 -2.27686,-3.711035 -1.06662,-0.665098 -2.14041,-1.323938 -3.22133,-1.976402 -1.25941,-0.08551 -2.52447,-0.159098 -3.79502,-0.2205 -1.3351,0.254552 -2.67122,0.523531 -4.00806,0.807194 -1.36295,0.304032 -2.72635,0.623364 -4.08991,0.958269 -0.72576,0.177925 -1.45161,0.360305 -2.17749,0.547133 -1.72221,0.317127 -3.4475,0.658797 -5.17501,1.024981 -1.02496,-0.145287 -2.0541,-0.283214 -3.08729,-0.413752 -0.94978,-0.48615 -1.9037,-0.967915 -2.86171,-1.445264 -0.8183,-1.058979 -1.63482,-2.119157 -2.44955,-3.180524 -0.26259,-1.115049 -0.51619,-2.23378 -0.76072,-3.356126 0.30436,-0.987459 0.61966,-1.975668 0.946,-2.964477 0.8817,-0.898205 1.77491,-1.790452 2.67962,-2.676515 0.62385,-0.412232 1.25033,-0.821408 1.87941,-1.227489 0.73355,-0.472788 1.47036,-0.941202 2.21034,-1.405243 1.18697,-0.265205 2.37308,-0.519746 3.55819,-0.763769 1.08312,0.0331 2.16251,0.07436 3.2381,0.123644 0.92243,0.118221 1.84152,0.242149 2.75722,0.371703 0.78466,0.226362 1.56628,0.456567 2.34487,0.690563 l 2.49281,3.526777 -6.23202,-8.816945 m -16.59288,58.72562 c 1.85412,-1.89559 3.75682,-3.7515 5.70594,-5.5649 -0.99024,0.92129 -1.96851,1.85356 -2.93451,2.79642 L 87.70267,93.151994 c -1.13984,1.112528 -2.265104,2.236859 -3.375532,3.372657 3.971651,-4.06239 8.133072,-7.978096 12.472514,-11.731567 0.924198,-0.476947 1.850942,-0.946801 2.7801,-1.40952 0.929748,-0.16965 1.858538,-0.33287 2.786248,-0.489677 1.20223,0.247116 2.39938,0.502594 3.5913,0.766386 0.90823,0.612187 1.81406,1.226702 2.7175,1.84354 0.62726,0.718197 1.25528,1.435831 1.88405,2.152893 0.65453,0.983761 1.31276,1.965096 1.97468,2.943991 0.10882,0.728924 0.22226,1.456093 0.3403,2.181468 -0.0491,0.813919 -0.0913,1.626177 -0.12682,2.436696 -0.4448,0.664546 -0.88378,1.330752 -1.31695,1.998538 -3.0598,2.623427 -6.02534,5.337341 -8.89116,8.134511 1.89292,-1.84757 3.82935,-3.65883 5.80771,-5.431674 7.02824,1.740664 13.87806,3.765974 20.52118,6.065244 -1.15398,0.92571 -2.29479,1.86577 -3.42207,2.81971 1.96761,-1.66506 3.97646,-3.28784 6.0246,-4.86576 m -28.8131,15.20063 6.74017,4.9108 c -4.31752,4.74718 -8.35404,9.74377 -12.111274,14.9426 0.807629,-1.1175 1.628163,-2.22567 2.461618,-3.32401 l -16.320391,-9.95091 c 2.49157,-3.28078 5.09334,-6.48966 7.805646,-9.61727 l -3.869003,-2.69245 7.690825,5.35206 -3.821822,-2.65961 c -2.741264,3.161 -5.369617,6.40501 -7.88541,9.72237 l -15.912602,-9.6886 c -0.878213,1.15725 -1.743348,2.32199 -2.595403,3.4939 4.363282,-6.00119 9.069388,-11.81443 14.11987,-17.39697 l 6.450733,4.68655 m -39.745944,44.06431 c 1.316606,-2.64085 2.686274,-5.26184 4.109409,-7.8611 -0.78323,1.43052 -1.550268,2.86762 -2.301177,4.31099 12.78492,1.28785 25.420003,3.06387 37.866719,5.33882 0.935448,0.17164 1.869767,0.34616 2.802932,0.52356 -9.814641,-8.38838 -19.240989,-17.26671 -28.205502,-26.63011 -0.853154,1.27807 -1.691484,2.56357 -2.514995,3.85611 1.655513,-2.59841 3.370899,-5.16835 5.146266,-7.7067 m 13.958858,53.5152 c 1.084556,-2.55687 2.222089,-5.09125 3.413146,-7.6008 -0.57724,1.2162 -1.141908,2.43829 -1.694067,3.66595 L 41.597703,159.14509 c 0.664482,-1.47439 1.344888,-2.94336 2.04129,-4.40659 -1.372709,2.88426 -2.68328,5.79079 -3.932239,8.71726 m 26.583257,42.65191 c 0.627984,-2.44204 1.297872,-4.87333 2.010079,-7.29208 -0.331609,1.12616 -0.654045,2.25511 -0.967348,3.38657 L 29.48076,193.80334 c -0.425628,1.5404 -0.835814,3.0839 -1.230632,4.63019 0.440284,-1.72434 0.899685,-3.44524 1.378296,-5.16224 14.437905,-3.5029 28.909064,-6.1223 43.283695,-7.81269 0.534609,-1.45068 1.085431,-2.8953 1.652561,-4.33345 -0.493794,1.25217 -0.975226,2.50928 -1.444356,3.77098 L 35.791312,173.73269 c -0.474984,1.27386 -0.938728,2.55088 -1.39128,3.83089 0.971963,-2.74911 1.995554,-5.48451 3.071178,-8.20422 m -9.390085,65.60814 c -1.583204,-0.13876 -3.166904,-0.25937 -4.751333,-0.36188 -0.460171,-0.0686 -0.920426,-0.13303 -1.380812,-0.19336 v 0 c 0.0089,-0.16563 0.01827,-0.32296 0.02767,-0.4721 0.03668,-0.58163 0.07904,-1.14694 0.124252,-1.69602 v 0 c 0.172283,-2.09194 0.394777,-4.15101 0.647745,-6.17743 v 0 c 0.0149,-0.11943 0.02992,-0.23886 0.04504,-0.35824 -0.01512,0.11938 -0.03014,0.23881 -0.04504,0.35824 -0.147305,1.18002 -0.284279,2.37111 -0.407026,3.57335 l 28.681223,2.35355 c 1.01314,-0.1273 2.026489,-0.25101 3.040011,-0.37157 0.994688,-0.31713 1.990834,-0.62976 2.988204,-0.93923 0.563169,-0.33955 1.127814,-0.67889 1.693719,-1.01856 0.315119,-0.18897 0.630584,-0.37708 0.946395,-0.56434 0.712524,-0.63264 1.429051,-1.25951 2.149379,-1.88091 0.357771,-0.74079 0.720949,-1.47975 1.089308,-2.217 0.137787,-0.8836 0.282971,-1.76855 0.43526,-2.65478 -0.350445,-0.91599 -0.693427,-1.83889 -1.029154,-2.76832 -0.605027,-0.84978 -1.20409,-1.70742 -1.797279,-2.57261 -0.744665,-0.71343 -1.485429,-1.43344 -2.22232,-2.15971 -0.879614,-0.44812 -1.757883,-0.89962 -2.63482,-1.35437 -0.90278,-0.23678 -1.805327,-0.47436 -2.707642,-0.71284 l -27.00188,-4.61311 c -0.299588,1.4071 -0.586473,2.81795 -0.859871,4.23233 0.519746,-2.68883 1.088203,-5.3647 1.700083,-8.02665 0.05565,-0.24294 0.111668,-0.48587 0.168058,-0.72869 M 368.55723,465.80536 c 3.17003,-1.89957 6.27487,-3.86547 9.31374,-5.89235 -1.62329,1.08271 -3.26542,2.14803 -4.92625,3.19513 -3.79434,-12.99941 -8.52785,-25.61056 -14.06006,-37.80409 7.71591,4.70872 15.69723,9.16269 23.90549,13.36132 -4.60284,3.63429 -9.38291,7.11327 -14.33595,10.40864 4.99794,-3.32523 9.81975,-6.83744 14.46106,-10.50749 4.72953,2.44509 9.53388,4.80634 14.40584,7.08361 -1.46238,1.21237 -2.94407,2.41077 -4.44493,3.59439 2.85312,-2.25004 5.63695,-4.5535 8.35066,-6.90485 m -47.90532,32.01868 c 3.71268,-1.8493 7.34784,-3.7889 10.90442,-5.81172 -1.72368,0.98035 -3.46582,1.94115 -5.22628,2.8816 L 337.59654,438.6795 c 1.44078,-0.76789 2.86986,-1.55649 4.28711,-2.36493 -2.79362,1.59355 -5.6332,3.11004 -8.51778,4.54273 m -6.26741,2.76163 5.57296,10.218 -2.64575,-4.85097 c -1.23957,-0.2589 -2.46965,-0.53106 -3.68984,-0.81621 -1.11877,-0.26483 -2.2292,-0.54057 -3.33096,-0.82707 -1.05906,-0.0935 -2.11263,-0.19714 -3.16041,-0.31102 -1.02167,0.27282 -2.04497,0.53565 -3.06961,0.78843 -0.90881,0.39656 -1.8223,0.78521 -2.74032,1.16584 -0.86435,0.75242 -1.74232,1.49804 -2.63388,2.23643 -0.73538,1.1361 -1.49411,2.26812 -2.27633,3.3954 -0.35566,1.58475 -0.73929,3.17067 -1.15116,4.75717 -0.0878,1.53411 -0.19363,3.07028 -0.31771,4.60826 0.32248,1.49546 0.63997,2.99205 0.95245,4.48976 0.65999,1.84399 1.32206,3.68739 1.98619,5.5302 0.90596,1.45622 1.82391,2.90782 2.75374,4.35473 1.21806,1.16549 2.45481,2.32092 3.70994,3.466 1.88003,0.85544 3.78869,1.68538 5.72493,2.48904 2.00166,0.13456 4.01599,0.23987 6.04183,0.31551 2.74093,-0.88438 5.45949,-1.82371 8.15342,-2.81682 1.22407,-0.94079 2.43031,-1.8923 3.61867,-2.85403 0.66138,-0.94217 1.30934,-1.88692 1.94396,-2.83397 0.348,-0.89888 0.68624,-1.79778 1.01479,-2.69656 m -77.52622,22.48075 c 3.83686,-0.11898 7.67742,-0.33856 11.51593,-0.66041 -1.78724,0.14986 -3.57493,0.27755 -5.36248,0.38323 l -2.29514,-37.56538 c -1.66689,0.0975 -3.33615,0.17091 -5.00681,0.22059 1.86306,-0.0554 3.72437,-0.14035 5.58261,-0.25521 7.6812,12.15391 17.18321,23.77894 28.56908,34.50693 0.1468,-0.0273 0.29359,-0.0548 0.44036,-0.0825 2.19565,-0.41828 4.38093,-0.8709 6.55487,-1.35725 -2.01946,0.45179 -4.04869,0.87447 -6.08694,1.26755 l -8.42488,-37.15328 c -0.1205,0.0231 -0.24103,0.046 -0.36158,0.0688 -1.25296,0.23815 -2.50982,0.46132 -3.77009,0.66966 1.26027,-0.20834 2.51713,-0.43151 3.77009,-0.66966 1.69641,-0.32076 3.38731,-0.66942 5.07173,-1.04538 m -39.06133,33.37672 -0.20007,8.39032 c -2.14479,-0.0216 -4.28699,-0.0744 -6.42557,-0.15798 -7.5694,-0.29836 -15.06331,-0.95645 -22.45365,-1.94403 2.03654,0.27215 4.08095,0.51928 6.13264,0.74075 l 2.76061,-18.92557 c 4.86833,0.52696 9.76741,0.89131 14.68656,1.08156 0.16124,0.006 0.3225,0.0122 0.48377,0.0181 l 0.26554,-4.72782 -0.52785,9.39799 0.26231,-4.67017 c -0.16127,-0.006 -0.32253,-0.0118 -0.48377,-0.0181 -4.97339,-0.19234 -9.92626,-0.56265 -14.84758,-1.09905 l 2.70736,-18.44262 c -1.45693,-0.15933 -2.91252,-0.33523 -4.3664,-0.52727 5.84885,0.77258 11.72557,1.28388 17.60415,1.50589 1.60296,0.0607 3.20679,0.10039 4.81063,0.11846 l -0.20735,8.02082 m -13.44153,-22.37981 c 1.04284,2.65974 2.16032,5.30939 3.35491,7.94621 m -39.93409,-1.19167 c 3.35868,0.91121 6.74069,1.74508 10.14325,2.4978 0.11086,0.0246 0.22175,0.049 0.33264,0.0734 -0.11089,-0.0244 -0.22178,-0.0488 -0.33264,-0.0734 -1.76225,-0.38984 -3.51899,-0.80147 -5.26984,-1.23431 l -11.63137,36.62537 c -1.90175,-0.47184 -3.79518,-0.96305 -5.67997,-1.47326 3.97388,1.07571 7.98605,2.067 12.03391,2.97023 4.88369,1.08879 9.82813,2.03806 14.82446,2.83823 l 1.65351,-7.86272 M 152.99147,472.1596 c 3.25477,1.46293 6.5475,2.86954 9.87635,4.21731 -1.7782,-0.71994 -3.54609,-1.45668 -5.3034,-2.20983 10.66719,-9.52153 20.72137,-19.44153 30.08853,-29.72546 -0.97145,8.38876 -1.626,16.84464 -1.94648,25.35499 -5.66901,-1.87496 -11.25132,-3.93482 -16.73697,-6.16585 5.53537,2.25126 11.16915,4.3282 16.89114,6.21679 -0.21008,4.91616 -0.31024,9.85047 -0.29725,14.80055 -1.85697,-0.57239 -3.70482,-1.16314 -5.5433,-1.77186 3.49493,1.15718 7.02376,2.2494 10.58456,3.27401 M 137.98179,426.943 c 1.07322,-1.28476 2.16405,-2.55753 3.27236,-3.81814 0.3137,-0.34656 0.63108,-0.69064 0.95213,-1.03221 v 0 c 0.0636,0.0438 0.13469,0.0922 0.21321,0.14541 v 0 c 0.30619,0.20751 0.62928,0.42141 0.96793,0.64323 v 0 c 1.28981,0.84489 2.62789,1.67998 4.00461,2.51585 v 0 c 0.64131,0.38934 1.28605,0.77531 1.93409,1.15803 -0.64804,-0.38272 -1.29278,-0.76869 -1.93409,-1.15803 -0.74794,-0.45411 -1.48448,-0.90799 -2.20806,-1.36334 -1.05123,2.7126 -2.04067,5.45459 -2.98769,8.2146 -3.41506,9.95225 -6.29358,20.12767 -8.72257,30.45267 7.78432,-5.70471 15.26975,-11.64201 22.49791,-17.75786 3.54129,-2.99615 7.02203,-6.03621 10.4397,-9.11899 -1.2103,-0.57976 -2.41531,-1.16878 -3.61489,-1.76683 -0.18804,-0.094 -0.37588,-0.1881 -0.56354,-0.28244 0.18766,0.0944 0.3755,0.18848 0.56354,0.28244 2.60156,1.29701 5.22869,2.55152 7.87976,3.76128 m 115.2113,-327.71554 a 5.1552553,5.1552553 0 0 1 -5.15525,5.15525 5.1552553,5.1552553 0 0 1 -5.15526,-5.15525 5.1552553,5.1552553 0 0 1 5.15526,-5.15526 5.1552553,5.1552553 0 0 1 5.15525,5.15526 z m -50.99504,0.1611 a 5.1552553,5.1552553 0 0 1 -5.15525,5.15525 5.1552553,5.1552553 0 0 1 -5.15526,-5.15525 5.1552553,5.1552553 0 0 1 5.15526,-5.15526 5.1552553,5.1552553 0 0 1 5.15525,5.15526 z m -50.29982,10.77203 a 5.1552553,5.1552553 0 0 1 -5.15525,5.15526 5.1552553,5.1552553 0 0 1 -5.15526,-5.15526 5.1552553,5.1552553 0 0 1 5.15526,-5.15525 5.1552553,5.1552553 0 0 1 5.15525,5.15525 z m 162.72914,18.7741 c 0,0 -13.66993,12.98644 -20.04924,-7.74629 0,0 -17.77091,20.5049 -21.1884,-10.02462 0,0 -17.77092,28.47902 -25.51721,-0.91133 0,0 -17.08742,32.58001 -25.06155,-7.0628 m -83.77962,63.70424 c 0,0 75.18464,-24.60588 167.22887,0.45566 M 163.72617,139.79608 c 0,0 13.66993,12.98643 20.04923,-7.7463 0,0 17.77092,20.5049 21.18841,-10.02462 0,0 17.77091,28.47903 25.51721,-0.91133 0,0 17.08741,32.58001 25.06155,-7.0628 m -89.76591,40.32631 c 0,0 87.94325,-27.79553 180.8988,0 m -4.44402,30.77146 -0.64441,102.13848 c 0,0 9.02169,77.00663 -85.06172,133.39223 m 85.70613,-235.53071 -170.7544,0.0403 0.64441,102.13849 c 0,0 -13.17462,77.46807 85.06171,133.39223 M 435.51398,256.87289 A 180.61224,180.61224 0 0 1 254.90173,437.48514 180.61224,180.61224 0 0 1 74.28949,256.87289 180.61224,180.61224 0 0 1 254.90173,76.260651 180.61224,180.61224 0 0 1 435.51398,256.87289 Z m 33.59681,92.66557 -31.57593,-14.66026 m 22.87644,-7.73289 -14.33805,30.60933 M 510.93146,256.87289 A 256.02972,256.02972 0 0 1 254.90173,512.90262 256.02972,256.02972 0 0 1 -1.1279907,256.87289 256.02972,256.02972 0 0 1 254.90173,0.84317017 256.02972,256.02972 0 0 1 510.93146,256.87289 Z M 41.373211,349.87531 72.949149,335.21505 m -22.876445,-7.73289 14.338054,30.60933 m 143.578012,13.77784 -0.15439,-180.62722 h -23.40265 v 142.17895 c 0.89148,9.59215 18.03882,33.9062 23.55704,38.44827 z m 41.1277,-180.62224 h -26.37094 v 195.20968 l 26.37094,20.74315 z m 59.18645,174.58109 0.0698,-174.58108 h 21.21627 l 0.20918,133.20435 c -4.09384,12.60029 -10.77747,26.33608 -21.49517,41.37673 z M 265.38228,191.24709 h 26.15679 v 193.24246 l -26.01733,20.7282 z",
          box: { x: 0, y: 0, width: 512, height: 512 }
        }, {
          name: 'Poem',
          path: "m 45.186927,145.54391 v 40.27655 m 0,-40.27655 h 17.278762 l 5.719027,1.9469 1.946903,1.94691 1.946903,3.77212 v 3.89381 l -1.946903,3.77212 -1.946903,1.94691 -5.719027,1.9469 m -17.278762,0 h 17.278762 l 5.719027,1.88606 1.946903,1.88607 1.946903,3.8938 v 5.71903 l -1.946903,3.83295 -1.946903,1.91649 -5.719027,1.91648 H 45.186927 m 36.504428,-26.83075 11.438054,26.83075 m 11.559741,-26.83075 -11.559741,26.83075 -3.772124,7.66593 -3.893805,3.83297 -3.772125,1.88606 h -1.946903 m 61.327438,-53.66151 v 32.61063 l 1.9469,5.74944 3.77213,1.91648 h 3.89381 m -15.33187,-26.83075 h 13.38496 m 13.38496,-13.4458 v 40.27655 m 0,-19.16482 5.77986,-5.77987 3.83297,-1.88606 h 5.71903 l 3.8938,1.88606 1.88606,5.77987 v 19.16482 m 13.38496,-40.27655 1.88607,1.9469 1.9469,-1.9469 -1.9469,-1.88606 -1.88607,1.88606 m 1.88607,13.4458 v 26.83075 m 34.55752,-21.05088 -1.94691,-3.89381 -5.71902,-1.88606 h -5.77986 l -5.77987,1.88606 -1.88606,3.89381 1.88606,3.77213 3.8938,1.9469 9.552,1.9469 3.83295,1.88606 1.94691,3.83297 v 1.91648 l -1.94691,3.83296 -5.71902,1.91648 h -5.77986 l -5.77987,-1.91648 -1.88606,-3.83296 m 78.6062,-21.08131 v 26.83075 m 0,-21.05088 -3.83297,-3.89381 -3.83296,-1.88606 h -5.77987 l -3.77213,1.88606 -3.8938,3.89381 -1.88606,5.71903 v 3.83296 l 1.88606,5.74945 3.8938,3.83296 3.77213,1.91648 h 5.77987 l 3.83296,-1.91648 3.83297,-3.83296 m 15.27101,-21.08131 v 26.83075 m 0,-15.33185 1.94691,-5.71903 3.83296,-3.89381 3.83297,-1.88606 h 5.71903 m 11.55973,-13.4458 v 32.61063 l 1.9469,5.74944 3.77213,1.91648 h 3.89381 m -15.33187,-26.83075 h 13.38496 m 32.61062,0 11.43806,26.83075 m 11.55973,-26.83075 -11.55973,26.83075 -3.77213,7.66593 -3.8938,3.83297 -3.77213,1.88606 h -1.9469 m 44.04868,-40.21571 -3.77212,1.88606 -3.89381,3.89381 -1.88606,5.71903 v 3.83296 l 1.88606,5.74945 3.89381,3.83296 3.77212,1.91648 h 5.77986 l 3.83297,-1.91648 3.83296,-3.83296 1.88606,-5.74945 v -3.83296 l -1.88606,-5.71903 -3.83296,-3.89381 -3.83297,-1.88606 h -5.77986 m 28.71681,0 v 19.16483 l 1.94691,5.74944 3.83296,1.91648 h 5.77987 l 3.77213,-1.91648 5.77987,-5.74944 m 0,-19.16483 v 26.83075 M 5.0016349,219.83042 v 26.83076 m 0,-19.16483 5.7798671,-5.77986 3.832966,-1.88607 h 5.719026 l 3.893807,1.88607 1.886061,5.77986 v 19.16483 m 0,-19.16483 5.779869,-5.77986 3.772124,-1.88607 h 5.779868 l 3.832964,1.88607 1.946903,5.77986 v 19.16483 m 36.382747,-26.83076 v 26.83076 m 0,-21.05089 -3.832965,-3.8938 -3.832965,-1.88607 H 70.16204 l -3.772125,1.88607 -3.893805,3.8938 -1.886062,5.71903 v 3.83296 l 1.886062,5.74945 3.893805,3.83296 3.772125,1.91649 h 5.779867 l 3.832965,-1.91649 3.832965,-3.83296 m 11.498895,-21.08131 11.438058,26.83076 m 11.55973,-26.83076 -11.55973,26.83076 -3.77213,7.66593 -3.893799,3.83296 -3.772129,1.88606 H 93.15983 m 80.49226,-34.43584 -3.83296,-3.8938 -3.83297,-1.88607 h -5.77987 l -3.77212,1.88607 -3.89381,3.8938 -1.88606,5.71903 v 3.83296 l 1.88606,5.74945 3.89381,3.83296 3.77212,1.91649 h 5.77987 l 3.83297,-1.91649 3.83296,-3.83296 m 21.0509,-21.08131 -3.77213,1.88607 -3.89381,3.8938 -1.88606,5.71903 v 3.83296 l 1.88606,5.74945 3.89381,3.83296 3.77213,1.91649 h 5.77985 l 3.83297,-1.91649 3.83296,-3.83296 1.88607,-5.74945 v -3.83296 l -1.88607,-5.71903 -3.83296,-3.8938 -3.83297,-1.88607 h -5.77985 m 28.71681,0 v 26.83076 m 0,-19.16483 5.77987,-5.77986 3.83296,-1.88607 h 5.71903 l 3.89381,1.88607 1.88606,5.77986 v 19.16483 m 17.21791,-40.27656 v 32.61063 l 1.94691,5.74944 3.77212,1.91649 h 3.89381 m -15.33186,-26.83076 h 13.38495 m 11.4989,11.4989 h 22.9978 v -3.83297 l -1.88607,-3.83296 -1.9469,-1.9469 -3.83297,-1.88607 h -5.77986 l -3.77213,1.88607 -3.89381,3.8938 -1.88606,5.71903 v 3.83296 l 1.88606,5.74945 3.89381,3.83296 3.77213,1.91649 h 5.77986 l 3.83297,-1.91649 3.83297,-3.83296 m 13.38494,-21.08131 v 26.83076 m 0,-19.16483 5.77987,-5.77986 3.83297,-1.88607 h 5.71903 l 3.8938,1.88607 1.88607,5.77986 v 19.16483 m 0,-19.16483 5.77986,-5.77986 3.77213,-1.88607 h 5.77987 l 3.83296,1.88607 1.94691,5.77986 v 19.16483 m 15.27102,-26.83076 v 40.21571 m 0,-34.43584 3.8938,-3.8938 3.77212,-1.88607 h 5.77987 l 3.83296,1.88607 3.83297,3.8938 1.88606,5.71903 v 3.83296 l -1.88606,5.74945 -3.83297,3.83296 -3.83296,1.91649 h -5.77987 l -3.77212,-1.91649 -3.8938,-3.83296 m 36.38274,-34.52711 v 40.27656 m 36.44359,-26.83076 v 26.83076 m 0,-21.05089 -3.83297,-3.8938 -3.83296,-1.88607 h -5.77986 l -3.77213,1.88607 -3.89381,3.8938 -1.88606,5.71903 v 3.83296 l 1.88606,5.74945 3.89381,3.83296 3.77213,1.91649 h 5.77986 l 3.83296,-1.91649 3.83297,-3.83296 m 17.21792,-34.52711 v 32.61063 l 1.9469,5.74944 3.77213,1.91649 h 3.8938 m -15.33186,-26.83076 h 13.38496 m 11.4989,11.4989 h 22.99778 v -3.83297 l -1.88606,-3.83296 -1.9469,-1.9469 -3.83296,-1.88607 h -5.77987 l -3.77212,1.88607 -3.89381,3.8938 -1.88606,5.71903 v 3.83296 l 1.88606,5.74945 3.89381,3.83296 3.77212,1.91649 h 5.77987 l 3.83296,-1.91649 3.83296,-3.83296 M 37.612257,267.22486 v 32.61063 l 1.946903,5.74944 3.772125,1.91649 H 47.22509 M 31.893231,280.67066 h 13.384956 m 13.384957,-13.4458 v 40.27656 m 0,-19.16483 5.779868,-5.77987 3.832965,-1.88606 h 5.719028 l 3.893805,1.88606 1.886062,5.77987 v 19.16483 M 93.15983,292.16956 h 22.99779 v -3.83297 l -1.88606,-3.83296 -1.94691,-1.94691 -3.83296,-1.88606 h -5.77987 l -3.772118,1.88606 -3.89381,3.89381 -1.886062,5.71903 v 3.83296 l 1.886062,5.74945 3.89381,3.83296 3.772118,1.91649 h 5.77987 l 3.83296,-1.91649 3.83297,-3.83296 m 32.61062,-21.08131 11.43805,26.83076 m 11.55974,-26.83076 -11.55974,26.83076 m 44.10952,-26.83076 v 26.83076 m 0,-21.05089 -3.83297,-3.89381 -3.83295,-1.88606 h -5.77987 l -3.77213,1.88606 -3.8938,3.89381 -1.88606,5.71903 v 3.83296 l 1.88606,5.74945 3.8938,3.83296 3.77213,1.91649 h 5.77987 l 3.83295,-1.91649 3.83297,-3.83296 m 15.27102,-21.08131 v 26.83076 m 0,-15.33186 1.9469,-5.71903 3.83297,-3.89381 3.83297,-1.88606 h 5.71902 m 7.72678,-13.4458 1.88606,1.9469 1.9469,-1.9469 -1.9469,-1.88606 -1.88606,1.88606 m 1.88606,13.4458 v 26.83076 m 36.44358,-26.83076 v 26.83076 m 0,-21.05089 -3.83296,-3.89381 -3.83297,-1.88606 h -5.77987 l -3.77211,1.88606 -3.89382,3.89381 -1.88605,5.71903 v 3.83296 l 1.88605,5.74945 3.89382,3.83296 3.77211,1.91649 h 5.77987 l 3.83297,-1.91649 3.83296,-3.83296 m 17.21793,-34.52711 v 32.61063 l 1.9469,5.74944 3.77213,1.91649 h 3.8938 m -15.33186,-26.83076 h 13.38496 m 11.49889,-13.4458 1.88607,1.9469 1.9469,-1.9469 -1.9469,-1.88606 -1.88607,1.88606 m 1.88607,13.4458 v 26.83076 m 22.99778,-26.83076 -3.77212,1.88606 -3.89381,3.89381 -1.88606,5.71903 v 3.83296 l 1.88606,5.74945 3.89381,3.83296 3.77212,1.91649 h 5.77987 l 3.83296,-1.91649 3.83297,-3.83296 1.88606,-5.74945 v -3.83296 l -1.88606,-5.71903 -3.83297,-3.89381 -3.83296,-1.88606 h -5.77987 m 28.71682,0 v 26.83076 m 0,-19.16483 5.77987,-5.77987 3.83297,-1.88606 h 5.71902 l 3.8938,1.88606 1.88606,5.77987 v 19.16483 m 45.93475,-26.83076 -3.77212,1.88606 -3.89381,3.89381 -1.88606,5.71903 v 3.83296 l 1.88606,5.74945 3.89381,3.83296 3.77212,1.91649 h 5.77986 l 3.83297,-1.91649 3.83296,-3.83296 1.88606,-5.74945 v -3.83296 l -1.88606,-5.71903 -3.83296,-3.89381 -3.83297,-1.88606 H 438.005 m 40.27655,-13.4458 h -3.89381 l -3.77212,1.9469 -1.9469,5.71903 v 32.61063 m -5.71903,-26.83076 h 13.38496 M 73.934164,328.06557 v 32.61063 l 1.946903,5.74944 3.772124,1.91649 h 3.893806 M 68.215136,341.51137 h 13.384958 m 13.384957,-13.4458 v 40.27656 m 0,-19.16483 5.779869,-5.77986 3.83296,-1.88607 h 5.71903 l 3.89381,1.88607 1.88606,5.77986 v 19.16483 m 13.38495,-15.33186 h 22.99779 v -3.83297 l -1.88606,-3.83296 -1.9469,-1.9469 -3.83297,-1.88607 h -5.77987 l -3.77212,1.88607 -3.89381,3.8938 -1.88606,5.71903 v 3.83297 l 1.88606,5.74945 3.89381,3.83295 3.77212,1.91649 h 5.77987 l 3.83297,-1.91649 3.83296,-3.83295 m 36.38275,-24.91428 v -1.94691 l 1.9469,-3.77211 1.9469,-1.9469 3.77213,-1.94692 h 7.66593 l 3.89381,1.94692 1.88606,1.9469 1.88606,3.77211 v 3.89381 l -1.88606,3.77213 -3.83297,5.77986 -19.16482,19.16483 h 26.83075 m 15.33187,-40.27656 h 21.05089 l -11.43806,15.33187 h 5.71903 l 3.83296,1.9469 1.88607,1.9469 1.9469,5.71903 v 3.83297 l -1.9469,5.74945 -3.77213,3.83295 -5.77987,1.91649 h -5.77987 l -5.71902,-1.91649 -1.94691,-1.91647 -1.88606,-3.83297 m 63.2135,-32.61063 v 40.27656 m 13.4458,-15.33186 h 22.99779 v -3.83297 l -1.88607,-3.83296 -1.9469,-1.9469 -3.83297,-1.88607 h -5.77985 l -3.77213,1.88607 -3.8938,3.8938 -1.88607,5.71903 v 3.83297 l 1.88607,5.74945 3.8938,3.83295 3.77213,1.91649 h 5.77985 l 3.83297,-1.91649 3.83297,-3.83295 m 15.33186,-34.52712 v 32.61063 l 1.9469,5.74944 3.77213,1.91649 h 3.8938 m -15.33186,-26.83076 h 13.38496 m 15.33186,-13.4458 v 32.61063 l 1.9469,5.74944 3.77213,1.91649 h 3.89381 m -15.33187,-26.83076 h 13.38496 m 11.49889,11.4989 h 22.99779 v -3.83297 l -1.88606,-3.83296 -1.9469,-1.9469 -3.83297,-1.88607 h -5.77987 l -3.77212,1.88607 -3.89381,3.8938 -1.88606,5.71903 v 3.83297 l 1.88606,5.74945 3.89381,3.83295 3.77212,1.91649 h 5.77987 l 3.83297,-1.91649 3.83296,-3.83295 m 13.38496,-21.08132 v 26.83076 m 0,-15.33186 1.94691,-5.71903 3.83296,-3.8938 3.83297,-1.88607 h 5.71903 m 28.83849,5.77987 -1.94691,-3.8938 -5.71902,-1.88607 h -5.77987 l -5.77987,1.88607 -1.88605,3.8938 1.88605,3.77213 3.89382,1.9469 9.55198,1.9469 3.83296,1.88607 1.94691,3.83296 v 1.91649 l -1.94691,3.83295 -5.71902,1.91649 h -5.77987 l -5.77987,-1.91649 -1.88605,-3.83295",
          box: { x: 0, y: 0, width: 512, height: 512 }
        }, {
          name: 'Somtres LOGO',
          path: "m 0.11410022,477.42783 v -35.94137 l 0.37076662,-0.15675 0.37076661,-0.15676 223.51450655,-84.45807 223.51451,-84.4581 v -27.00381 -27.00381 l -0.77006,0.289 -0.77005,0.289 L 223.71487,302.73753 1.0837793,386.64791 0.54188967,386.85315 0,387.05842 V 193.52921 0 H 255.71488 511.42977 V 36.534772 73.069544 L 287.79906,156.65423 64.17121,240.2389 l -0.02888,27.05975 -0.02888,27.05974 0.199858,-0.055 0.199893,-0.055 223.600789,-84.27989 223.60079,-84.27988 0.14261,-0.0544 L 512,125.57982 V 319.47454 513.36916 H 256.05694 0.11389665 Z M 447.88607,395.01415 v -54.24088 l -0.71301,0.26966 -0.71301,0.26967 -142.54549,53.86832 -142.54551,53.86829 -0.22816,0.0957 -0.22817,0.0957 143.48668,0.007 143.48667,0.007 z M 207.97156,118.05323 351.42972,64.428981 l 0.39929,-0.149401 0.39929,-0.149401 -144.05709,-0.0081 -144.057088,-0.008 v 53.858931 53.85892 l 0.199644,-0.0772 0.199643,-0.0772 z",
          box: { x: 0, y: 0, width: 512, height: 512 }
        }, {
          name: "worlds best boss",
          path: "m 199.16,312.522 c -2.11,-2.037 -4.811,-4.112 -6.002,-4.609 -1.274,-0.532 -2.56,-1.636 -3.127,-2.683 -0.529,-0.978 -2.056,-3.036 -3.393,-4.574 -2.999,-3.448 -4.249,-5.856 -5.903,-11.369 -1.446,-4.821 -4.568,-11.419 -5.943,-12.56 -0.596,-0.495 -0.908,-1.691 -0.908,-3.484 0,-1.502 -0.645,-4.956 -1.433,-7.674 -0.998,-3.443 -1.433,-6.338 -1.433,-9.538 0,-4.545 -1.053,-8.568 -2.243,-8.568 -1.719,0 -2.092,4.397 -0.815,9.598 0.277,1.126 0.094,1.289 -1.444,1.289 -2.979,0 -3.577,-3.352 -2.758,-15.472 0.15,-2.214 -2.075,-2.235 -4.082,-0.038 -1.605,1.757 -2.985,1.596 -2.985,-0.35 0,-0.402 -0.64,-1.151 -1.422,-1.663 -3.82,-2.503 -3.069,-12.848 0.933,-12.848 0.923,0 0.49,-2.282 -0.558,-2.936 -0.907,-0.566 -1.013,-1.246 -0.791,-5.072 0.174,-3 0.014,-4.861 -0.496,-5.798 -1.243,-2.281 -1.779,-6.617 -2.037,-16.476 -0.206,-7.872 -0.425,-9.719 -1.375,-11.581 -0.622,-1.218 -1.13,-2.752 -1.13,-3.407 0,-0.655 -0.514,-2.2 -1.143,-3.432 -2.626,-5.147 -2.765,-10.92 -0.509,-21.121 0.303,-1.37 0.382,-3.985 0.175,-5.811 -0.504,-4.456 0.808,-8.334 3.95,-11.67 3.743,-3.975 6.347,-7.712 8.86,-12.718 1.273,-2.536 3.441,-6.017 4.817,-7.736 1.376,-1.719 4.012,-5.121 5.857,-7.56 4.335,-5.73 29.12,-23.357 35.305,-23.357 0.842,0 3.002,-0.506 4.8,-1.125 3.46,-1.19 5.684,-1.225 19.832,-0.31 l 6.59,0.426 2.228,-1.788 c 6.123,-4.913 5,2.167 11.423,-0.286 3.158,-1.206 4.315,-1.167 6.405,0.217 1.11,0.735 2.689,1.14 4.455,1.142 1.981,0.003 3.835,0.557 6.719,2.009 6.062,2.413 12.373,4.735 18.568,6.845 1.072,0.344 1.072,0.363 0,1.155 -1.645,1.214 -0.546,1.884 5.12,3.123 4.789,1.046 6.683,1.893 6.683,2.987 0,0.277 -0.406,0.503 -0.902,0.503 -1.33,0 -0.764,1.9 0.767,2.574 10.63,9.854 17.824,25.466 19.118,39.831 0.293,4.57 0.746,11.661 1.006,15.758 0.26,4.097 0.738,8.097 1.063,8.888 0.325,0.791 0.885,3.885 1.244,6.876 1.487,12.367 1.942,15.407 2.999,20.023 0.876,3.827 0.974,5.168 0.467,6.392 -1.471,3.552 0.815,6.064 2.999,3.294 l 1.064,-1.35 1.613,1.873 c 2.441,2.834 2.95,5.211 3.571,16.705 1.418,26.217 -2.651,38.932 -12.483,38.999 -2.66,0.018 -2.657,-0.175 0.118,-9.057 2.699,-8.639 2.74,-9.53 0.462,-10.102 -1.281,-0.322 -1.411,-0.581 -1.1,-2.201 1.101,-5.739 1.073,-6.558 -0.3,-9.002 -0.815,-1.45 -2.195,-2.837 -3.47,-3.488 -1.873,-0.956 -2.161,-1.395 -2.496,-3.809 -0.992,-7.149 -2.98,-13.421 -8.563,-27.014 -1.551,-3.776 -2.974,-8.383 -3.382,-10.943 -0.513,-3.227 -1.199,-5.169 -2.535,-7.187 -1.333,-2.012 -1.831,-3.422 -1.831,-5.179 0,-1.328 -0.361,-3.273 -0.802,-4.323 -0.72,-1.712 -0.685,-2.206 0.337,-4.793 1.693,-4.286 1.316,-10.981 -0.852,-15.105 -2.521,-4.796 -8.235,-11.428 -10.223,-11.865 -2.069,-0.454 -3.517,-1.948 -5.05,-5.208 -1.752,-3.727 -4.903,-5.191 -9.038,-4.199 -1.572,0.377 -7.801,1.453 -6.829,-5.475 0.088,-0.625 -3.722,-0.607 -7.334,0.036 -2.03,0.361 -2.393,0.235 -3.598,-1.25 l -1.341,-1.651 -1.616,1.95 c -1.562,1.885 -2.935,2.049 -2.935,0.35 0,-2.989 -6.685,-5.407 -7.242,-2.619 -0.185,0.927 -1.247,2.514 -2.358,3.525 l -2.021,1.839 -2.423,-1.324 c -8.252,-4.508 -1.083,6.447 -4.23,7.27 -0.923,0.241 -1.192,0.698 -1.076,1.828 0.146,1.424 -0.001,1.516 -2.686,1.686 -1.841,0.116 -17.935,10.995 -30.06,10.995 -1.154,0 -3.111,0.516 -4.347,1.146 -1.236,0.63 -3.118,1.146 -4.182,1.146 -2.192,0 -9.27,4.544 -12.101,7.768 -3.407,3.88 -2.924,13.199 0.845,16.327 0.454,0.377 0.825,1.252 0.825,1.945 0,0.693 0.417,2.485 0.928,3.983 1.245,3.653 0.903,12.111 -0.582,14.376 -0.708,1.08 -0.936,2.217 -0.735,3.654 1.363,9.728 3.076,11.595 7.751,8.449 4.537,-3.053 10.075,-4.93 14.548,-4.93 2.595,0 4.906,-0.413 7.151,-1.28 5.478,-2.114 16.46,-1.826 18.331,0.48 0.74,0.913 1.618,1.993 1.95,2.4 0.332,0.407 1.08,0.589 1.662,0.405 2.82,-0.895 8.929,20.152 6.318,21.766 -0.306,0.189 -0.728,-0.376 -0.939,-1.256 -0.641,-2.683 -1.253,-3.032 -5.313,-3.032 -3.788,0 -3.815,-0.011 -7.416,-3.152 -4.453,-3.884 -5.023,-3.931 -5.415,-0.449 -0.737,6.541 -6.614,8.319 -11.05,3.342 -2.789,-3.129 -3.369,-3.252 -2.873,-0.609 0.206,1.099 0.102,2.508 -0.232,3.132 -0.864,1.615 1.049,2.682 5.716,3.189 4.94,0.536 5.997,1.117 3.725,2.045 -2.861,1.168 -11.582,0.84 -14.663,-0.552 -1.446,-0.653 -3.613,-1.151 -4.815,-1.106 -2.396,-5.038 -13.212,-1.104 -14.13,-3.548 -1.241,-3.561 -3.083,-1.235 -2.949,3.725 0.129,4.785 0.539,6.4 2.17,8.537 -0.631,5.907 8.594,14.014 6.908,19.03 -0.655,0.896 -0.654,1.303 0.007,2.582 0.853,1.65 0.478,3.88 -1.061,6.309 -1.712,2.703 1.476,15.674 4.213,17.139 0.539,0.288 1.901,2.825 3.026,5.638 1.897,4.74 7.556,14.384 8.943,15.241 0.332,0.205 0.604,1.14 0.604,2.077 0,2.998 1.491,5.641 3.704,6.566 2.152,0.899 2.47,1.881 1.467,4.519 -0.908,2.387 -2.621,1.827 -6.828,-2.235 z m 75.005,-88.885 c 0,-0.575 0.718,-0.82 2.435,-0.83 1.86,-0.011 3.072,-0.481 5.127,-1.989 l 2.692,-1.975 -0.16,-3.187 c -0.207,-4.114 -3.218,-6.515 -3.218,-2.566 0,7.164 -11.048,7.835 -12.376,0.751 -0.545,-2.904 -1.099,-2.827 -4.618,0.636 -3.225,3.174 -3.234,3.192 -2.147,4.403 l 1.091,1.216 -2.579,-0.45 c -3.803,-0.663 -4.731,-0.481 -6.198,1.218 -2.022,2.341 -2.475,1.165 -2.584,-6.712 l -0.098,-7.09 3.273,-4.878 c 4.94,-7.362 3.611,-7.027 27.383,-6.905 15.421,0.079 28.609,12.302 16.031,14.858 l -1.992,0.405 -0.287,3.979 c -0.274,3.811 -0.359,4.004 -2.006,4.556 -0.946,0.317 -3.242,1.547 -5.103,2.733 -1.861,1.186 -3.924,2.177 -4.584,2.203 -0.66,0.026 -3.199,0.135 -5.642,0.243 -3.55,0.156 -4.441,0.032 -4.441,-0.621 z m 53.702,8.468 c 0.297,-3.272 0.158,-3.798 -2.386,-9.026 -2.757,-5.667 -3.448,-6.113 -3.909,-2.52 -0.144,1.119 -0.605,2.984 -1.024,4.144 -0.875,2.419 -0.509,3.481 3.186,9.257 2.593,4.054 3.64,3.584 4.133,-1.854 z m -165.135,43.723 c -4.595,-1.637 -7.237,-9.144 -10.362,-29.441 -0.728,-4.729 2.433,0.37 5.463,8.811 1.496,4.169 7.382,17.465 8.331,18.82 1.573,2.246 0.049,3.05 -3.432,1.81 z m 88.678,3.57 c -0.697,-0.703 -1.793,-1.73 -2.435,-2.282 -0.688,-0.59 -1.168,-1.702 -1.168,-2.702 0,-2.192 -1.592,-3.071 -5.73,-3.165 -6.493,-0.148 -15.269,-6.733 -14.058,-10.549 0.392,-1.234 4.296,-2.522 6.199,-2.044 0.869,0.218 1.62,0.019 2.098,-0.557 1.19,-1.434 2.136,-1.061 3.873,1.524 4.301,6.404 10.417,7.365 14.115,2.217 4.757,-6.621 13.305,-2.491 8.975,4.337 -0.946,1.491 -1.719,3.015 -1.719,3.388 0,1.444 -1.427,1.946 -3.619,1.273 -4.116,-1.263 -6.951,3.161 -3.743,5.841 1.902,1.589 1.909,1.613 0.827,2.81 -1.376,1.523 -2.03,1.506 -3.614,-0.092 z m -30.166,16.498 c -0.55,-1.432 -0.117,-1.844 4.256,-4.046 2.908,-1.464 3.969,-2.303 3.969,-3.137 0,-1.421 2.272,-1.554 4.263,-0.249 1.233,0.808 1.691,0.799 4.994,-0.103 2.224,-0.607 5.973,-1.024 9.653,-1.073 3.309,-0.044 7.08,-0.286 8.38,-0.536 1.629,-0.314 3.512,-0.167 6.058,0.471 3.478,0.872 7.021,0.889 10.837,0.051 4.778,-1.05 9.541,2.225 5.066,3.484 -1.402,0.394 -3.581,1.117 -4.842,1.607 -3.004,1.166 -3.679,1.149 -6.66,-0.168 l -2.508,-1.108 -5.257,1.367 c -4.078,1.06 -5.684,1.245 -7.159,0.821 -3.796,-1.089 -7.493,-0.736 -21.536,2.057 -7.967,1.584 -9.096,1.651 -9.514,0.563 z m 19.761,8.478 c -3.621,-3.094 -0.038,-3.786 18.548,-3.582 11.068,0.121 1.945,4.251 -10.888,4.928 -5.675,0.3 -5.749,0.287 -7.66,-1.346 z m 63.107,14.636 c 0.726,-3.197 2.81,-11.413 3.865,-15.236 0.629,-2.278 1.143,-4.713 1.143,-5.411 0,-0.698 0.76,-3.604 1.689,-6.459 0.929,-2.855 2.352,-7.434 3.162,-10.177 2.982,-10.094 3.484,-5.98 0.863,7.076 -1.876,9.346 -1.861,9.618 0.787,14.086 1.38,2.33 2.507,3.386 5.067,4.751 3.76,2.004 4.413,2.717 2.938,3.208 -0.572,0.19 -3.231,1.21 -5.91,2.267 -2.679,1.057 -5.967,2.199 -7.308,2.538 -1.516,0.383 -2.792,1.158 -3.376,2.05 -1.45,2.213 -3.315,3.047 -2.92,1.306 z m -61.186,44.237 c -7.13,-2.025 -14.625,-2.436 -21.721,-4.538 -11.669,-4.573 -20.165,-14.235 -30.08,-21.518 -2.457,-1.902 -8.868,-4.66 -2.875,-6.948 3.614,-0.19 2.773,-6.344 5.239,-6.07 1.242,2.556 4.921,3.277 3.545,-0.525 -0.739,-4.19 -3.537,-7.498 -5.433,-11.171 0.169,-2.841 4.502,2.739 5.663,3.762 5.818,6.692 12.535,12.524 19.801,17.587 3.043,2.006 5.321,7.096 9.473,3.942 3.174,1.075 4.156,-1.141 1.281,-2.754 -3.812,-2.221 -7.918,-3.984 -10.929,-7.392 -2.878,-3.03 -6.67,-5.183 -9.287,-8.398 -0.076,-3.711 4.072,-9.187 7.973,-5.849 3.443,2.489 6.449,4.344 8.418,8.114 3.884,3.189 3.693,9.759 8.833,11.592 3.206,-0.443 6.048,-1.285 8.99,1.081 4.594,1.246 8.645,4.237 13.632,4.367 3.306,0.27 10.501,0.343 6.998,5.346 -0.146,4.139 6.89,0.293 9.331,-0.348 9.314,-3.768 18.026,-9.004 25.623,-15.582 3.721,-1.954 -1.184,4.08 -1.659,5.494 -0.015,3.341 1.515,7.126 -0.834,10.268 -5.196,8.409 -14.834,12.752 -23.884,15.726 -7.133,2.436 -14.721,2.524 -22.074,3.809 -1.95,0.514 -4.103,0.766 -6.025,0.005 z M 37.203,278.563 c 27.625,-3.905 55.881,-4.174 83.509,-0.128 M 40.62,360.064 c 3.571,13.008 -6.2,38.218 12.827,40.298 17.121,6.857 36.322,3.457 54.097,0.811 17.166,-1.208 14.476,-20.314 15.286,-32.418 0.817,7.841 1.57,16.129 0.951,23.897 -4.55,15.371 -23.416,11.239 -33.836,16.959 -2.148,9.403 15.63,1.458 18.541,12.113 3.349,6.168 11.009,-15.581 13.1,-2.984 7.118,0.933 14.087,-10.688 9.829,2.489 -6.287,11.226 5.066,19.867 11.967,7.549 10.577,-11.183 10.587,-27.878 12.158,-42.454 -4.655,-11.775 -6.545,-24.401 -21.83,-26.653 4.431,-8.684 17.218,-5.407 25.047,-9.001 5.556,-3.158 24.674,-13.127 11.022,-2.563 -13.411,8.308 14.114,4.976 17.423,2.644 12.877,-2.955 23.694,19.435 39.551,17.455 10.297,7.931 18.263,-6.577 30.445,-2.53 8.54,2.081 17.378,11.155 27.197,2.156 12.862,-0.55 23.939,-16.42 33.51,-16.046 -4.368,13.205 -19.892,18.368 -24.677,31.823 -5.625,11.906 -25.307,-11.337 -14.765,4.524 8.773,12.218 19.92,22.594 30.24,33.412 7.351,-10.201 5.525,-26.7 10.082,-39.108 5.509,-20.548 12.215,-41.808 7.195,-63.204 4.19,12.029 16.578,19.822 19.637,33.449 14.051,4.856 -10.363,-19.719 3.462,-17.565 2.79,-5.765 13.883,-9.238 4.745,-13.273 18.727,0.094 35.209,10.721 53.275,14.342 7.523,-0.668 21.022,19.272 9.893,7.011 -13.301,-9.13 -30.473,-10.5 -45.768,-14.809 -11.324,-0.286 -27.554,15.188 -16.385,26.273 13.818,3.549 10.035,13.372 -2.415,13.988 -6.443,11.115 5.943,28.703 6.702,42.271 -0.752,7.662 11.281,25.47 2.518,27.133 -5.559,-21.517 -10.764,-43.181 -15.093,-64.987 -3.406,-2.879 -19.656,-7.423 -17.452,2.039 -0.812,21.282 -5.243,42.162 -7.946,63.178 -6.564,0.598 -10.885,0.517 -9.502,-7.102 -6.557,0.017 -3.43,11.018 -13.078,7.094 -91.961,0.003 -183.922,0.005 -275.882,0.008 2.152,-8.561 6.592,-17.208 7.752,-25.628 -6.321,-13.614 -15.023,-26.2 -19.909,-40.382 2.636,-16.075 8.245,-32.486 17.265,-44.898 12.255,-10.122 -3.324,-26.218 4.129,-39.13 -2.089,-9.994 9.912,-13.203 5.459,-0.928 0.809,15.728 2.852,31.281 2.254,47.07 0.194,8.561 0.341,17.135 0.978,25.677 z m 81.469,-11.604 0.21,-68.723 c 2.926,24.817 2.174,50.082 1.882,75.073 -1.196,16.213 -2.18,-3.796 -2.092,-6.35 z m 326.065,87.674 c 0.809,-1.182 3.022,-5.243 4.916,-9.025 8.883,-17.731 15.857,-25.659 20.89,-23.745 5.38,2.045 8.629,-3.579 6.388,-11.057 -1.292,-4.314 -5.98,-4.258 -9.479,0.113 -1.035,1.293 -1.954,-0.264 -1.25,-2.117 0.87,-2.288 0.597,-3.989 -0.933,-5.807 -1.719,-2.043 -0.867,-2.942 2.787,-2.942 5.046,0 5.489,-3.292 0.937,-6.951 -1.322,-1.062 -3.859,-3.221 -5.637,-4.797 -1.778,-1.576 -4.262,-3.722 -5.519,-4.769 l -2.286,-1.904 2.865,1.488 c 1.576,0.818 5.573,3.959 8.882,6.98 3.309,3.021 6.6,5.883 7.313,6.36 1.932,1.293 6.426,7.158 10.436,13.62 1.956,3.152 4.572,6.946 5.814,8.432 1.966,2.352 2.167,2.848 1.555,3.828 -0.583,0.934 -0.442,1.893 0.822,5.607 3.356,9.857 4.512,17.15 3.069,19.353 -1.149,1.754 -5.66,4.452 -6.747,4.035 -0.462,-0.177 -1.649,0.557 -2.766,1.708 -2.511,2.59 -4.569,2.666 -7.3,0.268 -2.295,-2.015 -3.484,-1.667 -5.606,1.64 l -1.146,1.786 -6.471,0.022 -6.471,0.022 1.562,-2.722 c 0.859,-1.497 3.345,-5.518 5.523,-8.935 6.233,-9.777 8.445,-16.056 6.765,-19.196 -0.938,-1.752 -1.982,-1.541 -3.86,0.779 -0.898,1.109 -2.848,3.423 -4.335,5.142 -1.486,1.719 -3.224,4.149 -3.863,5.4 -0.638,1.251 -1.743,3.149 -2.455,4.219 -0.712,1.069 -3.229,4.946 -5.592,8.615 l -4.298,6.671 -2.991,0.013 -2.991,0.013 z M 183.435,253.957 c -0.21,-0.21 -0.382,-0.038 -0.382,0.382 0,0.42 0.172,0.592 0.382,0.382 0.21,-0.21 0.21,-0.554 0,-0.764 z m -141.43,52.477 3.159,14.365 0.278,-0.072 3.503,-14.225 h 0.256 l 3.567,14.298 H 53.045 l 3.011,-14.365 m 8.564,14.293 1.751,-0.282 1.751,-1.21 1.196,-1.915 0.619,-2.507 v -2.326 l -0.342,-1.92 -0.662,-1.581 -1.089,-1.491 -1.474,-0.926 -1.495,-0.294 -1.26,0.226 -1.431,0.565 -1.324,1.22 -1.025,2.055 -0.331,1.626 -0.066,2.439 0.269,1.852 0.662,1.694 0.961,1.353 1.068,0.926 1.153,0.427 1.068,0.07 m 10.081,0.072 v -14.23 h 4.506 l 1.089,0.361 1.196,0.632 0.876,1.423 v 1.22 l -0.192,1.355 -0.812,1.197 -1.004,0.655 -1.623,0.406 h -3.972 3.844 l 3.908,6.981 m 4.635,-14.365 v 14.081 h 6.728 m 3.759,0 v -13.878 h 3.78 l 1.538,0.429 1.153,0.655 0.79,0.836 0.961,1.649 0.32,1.852 v 1.129 l -0.064,1.491 -0.192,1.716 -0.534,1.197 -0.961,1.502 -1.474,0.924 -1.41,0.429 -1.068,0.07 h -2.776 m 10.89,-14.939 0.128,4.562 m 2.787,8.672 1.136,0.994 1.089,0.569 1.346,0.285 1.538,0.07 1.687,-0.711 1.132,-1.07 0.406,-1.423 -0.064,-1.265 -0.726,-1.287 -1.559,-1.061 -2.755,-1.287 -1.538,-1.061 -0.812,-1.152 -0.064,-1.423 0.534,-1.491 1.538,-0.994 1.495,-0.226 1.41,0.158 1.068,0.565 1.004,0.79 M 61.78,347.686 V 333.738 h 3.908 l 1.132,0.068 1.153,0.497 0.94,0.926 0.278,1.084 v 1.265 l -0.47,1.152 -1.025,0.768 -0.876,0.429 -1.196,0.226 h -3.716 3.78 l 1.132,0.203 1.346,0.361 1.089,0.79 0.598,0.7 0.214,0.994 v 1.423 l -0.555,1.355 -0.94,0.856 -1.666,0.711 -1.217,0.14 h -3.78 m 19.926,-0.07 h -7.133 v -7.328 h 5.937 -5.937 v -6.481 h 6.877 m 3.498,12.105 1.136,0.994 1.089,0.569 1.346,0.285 1.538,0.07 1.687,-0.711 1.132,-1.07 0.406,-1.423 -0.064,-1.265 -0.726,-1.287 -1.559,-1.061 -2.755,-1.287 -1.538,-1.061 -0.812,-1.152 -0.064,-1.423 0.534,-1.491 1.538,-0.994 1.495,-0.226 1.41,0.158 1.068,0.565 1.004,0.79 m 7.945,12.938 v -14.158 h -4.641 9.361 m -45.322,41.115 v -13.948 h 3.908 l 1.132,0.068 1.153,0.497 0.94,0.926 0.278,1.084 v 1.265 l -0.47,1.152 -1.025,0.768 -0.876,0.429 -1.196,0.226 h -3.716 3.78 l 1.132,0.203 1.346,0.361 1.089,0.79 0.598,0.7 0.214,0.994 v 1.423 l -0.555,1.355 -0.94,0.856 -1.666,0.711 -1.217,0.14 h -3.78 m 17.107,0.142 1.751,-0.282 1.751,-1.21 1.196,-1.915 0.619,-2.507 v -2.326 l -0.342,-1.92 -0.662,-1.581 -1.089,-1.491 -1.474,-0.926 -1.495,-0.294 -1.26,0.226 -1.431,0.565 -1.324,1.22 -1.025,2.055 -0.331,1.626 -0.066,2.439 0.269,1.852 0.662,1.694 0.961,1.353 1.068,0.926 1.153,0.427 1.068,0.07 m 9.009,-1.917 1.136,0.994 1.089,0.569 1.346,0.285 1.538,0.07 1.687,-0.711 1.132,-1.07 0.406,-1.423 -0.064,-1.265 -0.726,-1.287 -1.559,-1.061 -2.755,-1.287 -1.538,-1.061 -0.812,-1.152 -0.064,-1.423 0.534,-1.491 1.538,-0.994 1.495,-0.226 1.41,0.158 1.068,0.565 1.004,0.79 m 3.776,11.021 1.136,0.994 1.089,0.569 1.346,0.285 1.538,0.07 1.687,-0.711 1.132,-1.07 0.406,-1.423 -0.064,-1.265 -0.726,-1.287 -1.559,-1.061 -2.755,-1.287 -1.538,-1.061 -0.812,-1.152 -0.064,-1.423 0.534,-1.491 1.538,-0.994 1.495,-0.226 1.41,0.158 1.068,0.565 1.004,0.79",
          box: { x: 0, y: 0, width: 512, height: 512 }
        }, {
          name: 'Amazon logo',
          path: "M 386.34414,141.27735 C 386.56509,109.46193 386.79112,76.562381 359.6796,51.246902 329.66185,23.849296 285.34553,21.718406 272.47893,21.718406 h -10.8885 c -0.23568,0 -0.46973,0.0081 -0.70542,0.02286 -64.39802,3.727025 -107.17997,36.379523 -117.42969,89.599724 -1.6579,7.10784 0.27307,12.35948 2.20728,15.53387 2.94358,4.82741 8.00343,8.296 14.24656,9.77185 0.41772,0.0992 0.8387,0.17392 1.26295,0.22918 l 50.74146,6.45444 c 1.22883,0.15766 2.47388,0.12353 3.69127,-0.0943 9.71499,-1.74404 16.74968,-9.03067 18.86109,-19.51283 3.94157,-16.90732 18.82363,-21.15772 27.76328,-22.15571 h 2.99072 c 7.76125,0 15.34857,3.31092 18.96669,8.26024 4.32517,6.77463 4.3398,17.16739 4.28291,27.2887 -8.99979,0.72005 -18.74726,1.58476 -28.52074,2.87695 -21.17235,2.74041 -43.36544,6.51132 -62.30127,15.44772 -40.38125,16.53349 -63.52845,51.71997 -63.52845,96.59705 0,28.77755 9.1412,52.76508 26.43539,69.36685 16.14339,15.49648 38.2032,23.68682 63.79663,23.68682 14.25469,0 27.01241,-1.54899 40.1553,-4.87617 0.22603,-0.0569 0.4486,-0.12038 0.66966,-0.19022 15.55337,-4.90056 29.15141,-13.05352 43.74905,-26.47277 5.38492,7.52558 11.07542,14.47576 23.73722,25.11882 0.99961,0.84033 2.12926,1.51486 3.34343,1.9976 8.86488,3.52223 17.85004,2.54862 24.57756,-2.56324 0.14629,-0.11047 0.29095,-0.22603 0.43236,-0.34296 11.27371,-9.39638 30.00147,-25.48616 40.10165,-34.62573 8.37402,-7.02007 9.74585,-18.37667 3.47021,-29.04737 -0.27469,-0.46649 -0.58026,-0.91672 -0.91509,-1.34257 l -1.96348,-2.48848 c -8.94127,-11.29809 -15.4022,-19.4608 -15.4022,-38.17396 v -81.80602 c -0.003,-3.02647 0.0152,-6.02695 0.0373,-9.00142 z M 280.15565,250.3054 c -0.15441,0.25681 -0.29744,0.52013 -0.43073,0.78669 -4.29428,8.58044 -11.55328,14.73417 -20.01832,17.01297 -1.19466,0.11708 -2.28692,0.32508 -3.28816,0.51525 -0.68592,0.13155 -1.72129,0.32833 -2.09676,0.32833 -17.67935,0 -19.58759,-18.17025 -19.58759,-25.98028 0,-19.67536 9.2371,-31.18476 29.94296,-37.27835 6.69661,-1.53924 14.63828,-2.54536 23.71121,-3.01022 l 0.005,2.86719 c 0.0536,17.87117 0.0927,30.78491 -8.23748,44.75842 z m 227.15666,116.43496 c -8.0912,-9.92629 -32.00073,-11.00068 -41.90424,-11.00068 -8.85513,0 -22.31012,0.86796 -36.26085,5.05012 -9.05996,2.84118 -17.11215,6.79738 -24.51093,12.01489 -6.91441,4.76565 -10.00428,12.26683 -7.87339,19.11298 1.99273,6.40079 7.94979,10.53416 15.17465,10.53416 0.51525,0 1.05325,-0.0203 1.60751,-0.065 0.47137,-0.0373 0.9411,-0.10413 1.40434,-0.19657 1.81069,-0.36246 3.94808,-0.65666 6.34878,-0.93948 -51.05354,19.04799 -106.24373,29.09128 -160.11409,29.09128 -82.45448,0 -165.900486,-22.20774 -234.968266,-62.53208 -0.0975,-0.0554 -0.19504,-0.11225 -0.29419,-0.16584 -3.02488,-1.65627 -6.18464,-2.49497 -9.38666,-2.49497 -7.1533502,0 -13.2778202,4.23089 -15.60538024,10.77797 -2.36494996,6.65597 -0.12851,14.07263 5.69862004,19.00245 67.7301002,61.48857 156.1855662,95.352 249.1010562,95.352 63.5512,0 132.01271,-18.34094 183.1638,-49.06734 6.3699,-3.65225 12.35947,-7.51418 17.85979,-11.51102 -1.92771,5.29065 -4.30241,11.43463 -7.21673,18.57172 -0.0203,0.0521 -0.0422,0.10565 -0.0635,0.16102 -2.12277,5.41418 -1.6449,11.0039 1.31006,15.33557 2.78592,4.0846 7.51093,6.52432 12.63579,6.52432 4.09274,0 8.16434,-1.47586 11.77921,-4.26666 0.14146,-0.11047 0.2812,-0.22425 0.41935,-0.3397 25.71534,-21.74286 35.84478,-59.53486 36.37791,-79.6312 0.003,-0.10717 0.005,-0.21612 0.005,-0.32345 v -2.95821 c 0,-5.77989 -1.45635,-11.27859 -3.99359,-15.09013 -0.21282,-0.32671 -0.44698,-0.64203 -0.69404,-0.94598 z",
          box: { x: 0, y: 0, width: 512, height: 512 }
        },  {
          name: 'Twitter logo',
          path: "m 500.39498,94.783255 c -8.04333,3.56747 -16.31293,6.578355 -24.76256,9.022745 10.0038,-11.313525 17.63092,-24.625485 22.28679,-39.19267 1.04382,-3.265229 -0.0379,-6.839307 -2.72185,-8.974835 -2.68055,-2.137183 -6.40493,-2.39318 -9.35634,-0.644129 -17.94473,10.642962 -37.30489,18.291559 -57.60479,22.764109 -20.44857,-19.981149 -48.222,-31.35247 -76.93354,-31.35247 -60.60577,0 -109.91287,49.30545 -109.91287,109.909555 0,4.77315 0.30224,9.51987 0.90013,14.20052 C 167.08399,163.91295 97.16648,126.94832 49.15424,68.053635 c -1.71107,-2.099197 -4.34705,-3.23055 -7.04576,-3.014189 -2.70038,0.211407 -5.1266,1.734189 -6.49084,4.074519 -9.73786,16.70931 -14.88593,35.820085 -14.88593,55.264445 0,26.48355 9.45546,51.6111 26.15817,71.24541 -5.07869,-1.75897 -10.0071,-3.95724 -14.71087,-6.56844 -2.52532,-1.40552 -5.6072,-1.38405 -8.116,0.0545 -2.51045,1.43855 -4.08444,4.08441 -4.15051,6.97639 -0.0103,0.48723 -0.0103,0.97445 -0.0103,1.46829 0,39.53123 21.27603,75.12172 53.80445,94.51985 -2.79453,-0.27912 -5.5874,-0.68377 -8.36209,-1.21393 -2.86059,-0.54669 -5.80212,0.45584 -7.73118,2.63762 -1.93238,2.18012 -2.57156,5.21909 -1.68134,7.99379 12.04021,37.59058 43.03924,65.24014 80.51424,73.66996 -31.08161,19.46751 -66.62587,29.66455 -103.93899,29.66455 -7.78568,0 -15.61595,-0.4575 -23.2794099,-1.36424 -3.80697,-0.45254 -7.4471,1.79531 -8.74362003,5.41562 -1.29651,3.62198 0.0777,7.66015 3.31644003,9.73623 47.9345899,30.73477 103.3608999,46.97998 160.2835699,46.97998 111.90305,0 181.90644,-52.76886 220.92568,-97.03692 48.65637,-55.19838 76.56195,-128.26058 76.56195,-200.45067 0,-3.01585 -0.0462,-6.06142 -0.13884,-9.09706 19.19662,-14.46313 35.72426,-31.96688 49.1733,-52.08513 2.04305,-3.05545 1.82173,-7.093645 -0.54503,-9.906335 -2.36344,-2.81434 -6.30253,-3.72438 -9.66519,-2.23463 z",
          box: { x: 0, y: 0, width: 512, height: 512 }
        },  {
          name: 'Square test',
          path: "M 0,0 v 512 h 512 v -512 h -512 ",
          box: { x: 0, y: 0, width: 512, height: 512 }
        },  {
          name: 'Square inside square test',
          path: "M 0,0 v 512 h 512 v -512 h -512 M 100,100 v 312 h 312 v -312 h -312 M 200,200 v 112 h 112 v -112 h -112",
          box: { x: 0, y: 0, width: 512, height: 512 }
        },  {
          name: 'Line test',
          path: "M 256,0 v 512",
          box: { x: 0, y: 0, width: 512, height: 512 }
        }, {
          name: 'Arrow left',
          path: "M 480.00,320.00L 256.00,320.00L 256.00,480.00L 32.00,256.00L 256.00,32.00L 256.00,192.00L 480.00,192.00 z",
          box: { x: 0, y: 0, width: 512, height: 512 }
        }, {
          name: 'Headhunterz logo',
          path: "m 244.974,410.536 c -2.173,-1.266 -3.952,-4.17 -3.952,-6.452 0,-2.283 3.744,-9.593 8.319,-16.245 4.576,-6.652 21.342,-33.758 37.259,-60.236 15.917,-26.478 28.94,-48.38 28.94,-48.672 0,-0.291 -11.743,1.043 -26.096,2.964 l -26.096,3.494 -13.475,22.581 c -7.411,12.42 -19.461,34.267 -26.776,48.55 -7.316,14.283 -15.849,28.357 -18.962,31.275 -3.779,3.543 -8.367,5.307 -13.804,5.307 -4.479,0 -9.64,-1.242 -11.469,-2.76 -1.829,-1.518 -3.326,-4.453 -3.326,-6.521 0,-2.068 6.918,-14.392 15.374,-27.386 8.456,-12.994 20.756,-32.58 27.334,-43.524 6.578,-10.944 11.432,-20.426 10.788,-21.071 -0.645,-0.645 -10.737,0.079 -22.426,1.608 l -21.254,2.781 -10.42,18.291 c -5.731,10.06 -14.138,25.664 -18.681,34.675 -4.544,9.011 -10.837,18.411 -13.986,20.888 -3.149,2.477 -8.703,4.503 -12.343,4.503 -3.64,0 -8.584,-1.052 -10.986,-2.338 -2.402,-1.286 -4.368,-4.274 -4.368,-6.64 0,-2.366 8.751,-17.319 19.447,-33.228 14.106,-20.981 18.502,-29.116 16.007,-29.618 -1.892,-0.38 -19.535,1.928 -39.206,5.129 -19.671,3.201 -50.61,9.887 -68.753,14.857 -18.143,4.97 -34.664,8.393 -36.714,7.606 -2.05,-0.787 -4.313,-3.764 -5.029,-6.616 -0.716,-2.852 -0.182,-7.278 1.187,-9.836 1.369,-2.557 6.282,-5.669 10.918,-6.915 4.636,-1.246 40.439,-6.925 79.561,-12.621 39.122,-5.696 72.304,-11.57 73.737,-13.054 1.433,-1.484 7.766,-11.769 14.073,-22.856 6.307,-11.087 16.306,-31.294 22.219,-44.905 6.292,-14.482 14.35,-28.835 19.427,-34.603 5.822,-6.614 10.502,-9.855 14.231,-9.855 3.056,0 8.113,2.557 11.239,5.683 4.05,4.05 5.252,7.042 4.183,10.41 -0.825,2.6 -13.123,24.051 -27.328,47.669 -14.205,23.618 -25.397,43.373 -24.87,43.9 0.527,0.527 10.475,-0.68 22.107,-2.682 11.632,-2.002 22.256,-4.848 23.609,-6.325 1.353,-1.477 10.223,-16.01 19.712,-32.297 9.489,-16.287 20.684,-37.626 24.877,-47.421 4.193,-9.795 10.261,-23.012 13.484,-29.37 3.223,-6.359 9.037,-14.234 12.919,-17.501 3.882,-3.267 9.059,-5.94 11.504,-5.94 2.445,0 7.003,2.557 10.129,5.683 4.099,4.099 5.257,7.024 4.155,10.497 -0.84,2.648 -15.779,28.572 -33.197,57.608 -17.418,29.037 -31.113,53.35 -30.434,54.029 0.679,0.679 12.543,-0.568 26.364,-2.772 l 25.13,-4.007 20.673,-36.244 c 11.37,-19.934 28.196,-51.995 37.39,-71.245 9.194,-19.251 19.869,-38.304 23.721,-42.34 4.413,-4.624 9.189,-7.339 12.91,-7.339 3.248,0 8.137,2.079 10.865,4.62 3.75,3.494 4.6,6.108 3.487,10.726 -0.81,3.358 -10.08,21.349 -20.601,39.978 -10.521,18.63 -27.244,47.403 -37.162,63.941 -9.918,16.538 -17.496,30.606 -16.839,31.262 0.657,0.657 12.191,-1.554 25.632,-4.911 13.441,-3.358 30.911,-8.534 38.821,-11.504 7.91,-2.969 17.132,-5.398 20.492,-5.398 3.361,0 13.283,2.44 22.051,5.422 8.767,2.982 18.514,7.108 21.658,9.168 3.145,2.06 6.34,5.367 7.1,7.349 0.819,2.134 -0.714,5.844 -3.762,9.102 -2.83,3.025 -19.371,14.881 -36.759,26.347 -17.388,11.466 -40.451,26.332 -51.251,33.036 -10.8,6.704 -19.341,12.485 -18.98,12.846 0.361,0.361 17.327,-2.428 37.702,-6.198 20.375,-3.77 44.274,-8.426 53.11,-10.346 14.395,-3.129 16.919,-3.135 24.275,-0.061 6.327,2.644 8.21,4.721 8.21,9.058 0,3.095 -1.231,6.388 -2.736,7.319 -1.505,0.93 -13.953,2.454 -27.662,3.386 -13.709,0.932 -37.628,4.378 -53.153,7.658 -15.525,3.28 -33.308,7.821 -39.518,10.092 -6.21,2.271 -17.484,6.451 -25.054,9.29 l -13.763,5.161 -10.475,-4.001 c -5.761,-2.2 -12.745,-5.839 -15.52,-8.085 -4.416,-3.576 -4.651,-4.56 -1.882,-7.896 1.74,-2.096 7.296,-5.905 12.347,-8.465 5.051,-2.559 18.837,-11.008 30.636,-18.774 11.799,-7.766 32.63,-22.53 46.292,-32.807 13.662,-10.278 27.778,-21.118 31.369,-24.089 l 6.53,-5.402 -6.157,1.545 c -3.386,0.85 -26.457,4.716 -51.267,8.591 l -45.11,7.046 -20.494,35.001 c -11.272,19.251 -27.115,47.703 -35.207,63.228 -8.092,15.525 -17.288,31.021 -20.436,34.437 -4.224,4.584 -7.83,6.192 -13.769,6.141 -4.425,-0.038 -9.824,-1.104 -11.997,-2.37 z",
          box: { x: 0, y: 0, width: 512, height: 512 }
        },  {//For testing purposes
          name: "Grid 6x6",
          path: "M 0 0 L 512 0 L 512 512 L 0 512 L 0 0 M 85.33 0 L 85.33 512 M 170.67 0 L 170.67 512 M 256 0 L 256 512 M 341.33 0 L 341.33 512 M 426.67 0 L 426.67 512 M 0 85.33 L 512 85.33 M 0 170.67 L 512 170.67 M 0 256 L 512 256 M 0 341.33 L 512 341.33 M 0 426.67 L 512 426.67",
          box: { x: 0, y: 0, width: 512, height: 512 }
        },  {//For testing purposes
          name: "Point to center",
          path: "M 256 256",
          box: { x: 0, y: 0, width: 512, height: 512 }
        },];
        
    // Calls the createSVGImage function for each of the svg image paths on the SVGS variable.
    for (var i = 0; i < SVGS.length; i++) {
        createSVGImage(i, $images, SVGS[i].path, SVGS[i].box);
    }

    function getDataOfCurrentAnimation(steps, size) {

        const svgData = animation.cur.svgData
        const simulationPlatform = new Stewart
        const simulationAnimation = new Animation(simulationPlatform)
        simulationPlatform.initHexagonal(platformValues)

        const angles = []

        for (var i = 0; i <= steps; i++) {  // For every vertex, define its position
            let interpolation = Animation.SVG(svgData, size, animation.drawingSpeed)
            interpolation.fn.call(simulationAnimation, i / steps); 
            simulationPlatform.update(simulationAnimation.translation, simulationAnimation.orientation, simulationAnimation.laser)
            angles.push(simulationPlatform.getServoAngles())
        } 

        const animationData = {
          angles: angles,
          info: {
            name: svgData.name,
            drawingSize: size,
            distanceToWall: simulationPlatform.wallDistance,
            rotationAxisOffset: simulationPlatform.rotationAxisOffset,
          }
        }
        return animationData
    }

    // Takes care of displaying the current servo angles onscreen. It's called by the draw function in the sketch.
    function displayCurrentServoAngles() {
        let servoAngles = platform.getServoAngles(platform.translation)
        let roundedNumbers = servoAngles.slice(0,-1).map(function(num) {
        if (num == null) {
            return "Out of range"
        }
        return num.toFixed(3);
        })
        roundedNumbers.push(servoAngles[servoAngles.length - 1].toFixed(0))
        // Create a string with HTML containing titles and rounded numbers
        var htmlString = "<h3>Current servo angles and laser state</h3><ul>";
        for (var i = 0; i < roundedNumbers.length; i++) {
        if (i !== 6) {
            var title = "Servo " + (i) + ": ";
            if (roundedNumbers[i] === "Out of range") {
                htmlString += "<li><strong>" + title + "</strong>" + roundedNumbers[i] + "</li>";
            }
            else {
                htmlString += "<li><strong>" + title + "</strong>" + roundedNumbers[i] + " rad, " + Math.round(roundedNumbers[i]*180/Math.PI) + "°</li>";
            }
            
        }
        else {
            var state = "Off"
            var title = "Laser: "
            if (roundedNumbers[i] == 1) {
            state = "On"
            }
            htmlString += "<li><strong>" + title + "</strong>" + state + "</li>";
        }

        }
        htmlString += "</ul>";
        document.getElementById("currentServoAngles").innerHTML = htmlString
        
    }

    // Displays platform tweakable parameters onscreen.
    function displayPlatformParameters() {
        let distanceToWall = platform.wallDistance
        let rotationAxisOffset = platform.rotationAxisOffset
        let drawingSize = animation.drawingSize
        let drawingSpeed = animation.drawingSpeed
        document.querySelector('label[for="distanceToWallInput"]').textContent = 'Distance to wall (' + distanceToWall + '): ';
        document.querySelector('label[for="rotationAxisOffsetInput"]').textContent = 'Rotation axis offset (' + rotationAxisOffset + '): ';
        document.querySelector('label[for="drawingSizeInput"]').textContent = 'Drawing size (' + drawingSize + '): ';
        document.querySelector('label[for="drawingSpeedInput"]').textContent = 'Drawing speed (' + drawingSpeed + '): ';
    }

    function findMaxSize() {
 
        let maxServoRange = platform.servoRange[1] * 180 / Math.PI
        let highestAngle = 0
        let maxDrawingSize = 0
        let outOfRange = false
        
        while (outOfRange === false) {
            const steps = 180
            const angles = getDataOfCurrentAnimation(steps, maxDrawingSize).angles

            if (getHighestServoAngles(angles).some(element => typeof element === 'string')) {
                outOfRange = true
                highestAngle = 'Out of range (>' + Math.round(maxServoRange) + ')'
            }
            else {
                highestAngle = Math.max(...(getHighestServoAngles(angles)))
            }

            console.log('Drawing size: ' + maxDrawingSize + ', highest angle: ' + highestAngle)

            if (outOfRange === false) {
                if (highestAngle < maxServoRange * 0.6) {
                    maxDrawingSize += 70
                }
                else if (highestAngle < maxServoRange * 0.8) {
                    maxDrawingSize += 30
                }
                else {
                    maxDrawingSize += 10
                }
            }
        }
        maxDrawingSize -= 20 // To be safe, dont reach the limit
        console.log(maxDrawingSize)
        return maxDrawingSize
    }

    // When change parameters button is pressed execute this function to change parameters corresponding to inputs.
    tweakParametersBtn.addEventListener('click', applyParameterChanges)

    maxSizeBtn.addEventListener('click', function(){
        document.querySelector('label[for="drawingSizeInput"]').textContent = 'Drawing size (calculating...): ';
        document.getElementById('drawingSizeInput').value = findMaxSize()
        applyParameterChanges()
    })
    
    // When enter key is pressed inside of any of the input fields, also execute the function
    var inputValueField = document.getElementsByClassName('inputField');
    for (var i = 0; i < inputValueField.length; i++) {
        inputValueField[i].addEventListener('focus', function() {
            isInputFocused = true
        });     
        inputValueField[i].addEventListener('blur', function() {
            isInputFocused = false
        });       
        inputValueField[i].addEventListener('keydown', function(event) {
            if (event.keyCode === 13) {
                applyParameterChanges()
            }
        });
    }

    function applyParameterChanges() {
        let inputMapping = {
            wallDistance: document.getElementById('distanceToWallInput'),
            rotationAxisOffset: document.getElementById('rotationAxisOffsetInput'),
            drawingSize: document.getElementById('drawingSizeInput'),
            drawingSpeed: document.getElementById('drawingSpeedInput'),
        }

        platformValues = {
            wallDistance: parseFloat(inputMapping.wallDistance.value),
            rotationAxisOffset: parseFloat(inputMapping.rotationAxisOffset.value)
        }

        let animationValues = {
            drawingSize: parseFloat(inputMapping.drawingSize.value),
            drawingSpeed: parseFloat(inputMapping.drawingSpeed.value),
        }

        for (const key in platformValues) {
            if (isNaN(platformValues[key])) {
                platformValues[key] = platform[key]
            }
            else {
                inputMapping[key].value = ""
            }
        }
        platform.initHexagonal(platformValues)

        for (const key in animationValues) {
            if (isNaN(animationValues[key])) {
                animationValues[key] = animation[key]
            }
            else {
                animation[key] = animationValues[key]
                inputMapping[key].value = ""
            }
        }
        animation._start(Animation.SVG(animation.cur.svgData, animation.drawingSize, animation.drawingSpeed))
        animation.currentPath = [[],[],[],[]]
        animation.stopDrawingPath = false
    }

    // Find the button with the specified class and add a click event listener
    var cameraButtons = document.getElementsByClassName('camera-button');
    for (var i = 0; i < cameraButtons.length; i++) {
        cameraButtons[i].addEventListener('click', function(event) {
            currentView = event.target.id
        });
    }

    // Function to deep clone an array (also works for multidimensional arrays) Used when pressing getAnimationAnglesBtn.
    function cloneArray(arr) {
        var clonedArray = [];
        for (var i = 0; i < arr.length; i++)
            clonedArray[i] = arr[i].slice();
        return clonedArray;
    }    

    getAnimationAnglesBtn.addEventListener('click', function() {

        // Get the checkbox element
        const isOriginalAngles = document.getElementById('animationAnglesType');
        const isRemoveRedundant = document.getElementById('redundantRowsCheckbox')

        // Options for servo angles text file download
        const options = {
            steps: {
              original: 2050,   // Number of steps when remove redundant rows is not activated, and for original angles
              withRemoveRedundant: 2500 // Number of steps when remove redundant rows is activated, and adapted angles
            },
            originalValues: isOriginalAngles.checked,
            // Options for adapted arduino angles
            calibrationData: {
              middlePos: [381, 395, 379, 396, 382, 404],
              slope: [2.608, 2.608, 2.608, 2.608, 2.608, 2.608],
              direction: [1, -1, 1, -1, 1, -1]
            },
            addDigitalOut: true, // Add column in the beginning with digital output value, as a prevision for more customization.
            removeRedundant: isRemoveRedundant.checked,
            leadingZeros: 14, // Zeros at the beginning for laser activation.
            zerosToKeep: 20, // Zeros to keep between laser movements from one shape to another. Minimum 2. Should be an even number.
        }

        const steps = (isRemoveRedundant.checked && !isOriginalAngles.checked ? options.steps.withRemoveRedundant + options.leadingZeros + options.zerosToKeep * 5 : options.steps.original)
        const currentAnimationData = getDataOfCurrentAnimation(steps, animation.drawingSize)

        downloadServoAngles(currentAnimationData, options)
    })

    function downloadServoAngles(data, options) {

        const calibrationData = options.calibrationData
        let numberOfSteps = 0
        
        function adaptDataArduino(rawData) {
    
          // Apply mathematical operations to map servo angles into real-life servo arduino angles  
          for (let i = 0; i < rawData.length; i++) {
            for (let j = 0; j < rawData[i].length; j++) {
              if (j !== 6) {
                const angleDegrees = rawData[i][j] * 180 / Math.PI
                const b = calibrationData.middlePos[j]
                const m = calibrationData.slope[j]
                if (calibrationData.direction[j] === -1) {
                  rawData[i][j] = Math.floor(-(angleDegrees) * m + b)
                }
                else {
                  rawData[i][j] = Math.ceil((angleDegrees) * m + b)
                }
              }
            }
          }
          
          // Remove redundant rows if option is checked (duplicates and when laser activation is off)
          if (options.removeRedundant) {

            // Copy first row and set laser value to zero specified number of times to avoid beginning laser activation
            for (let i = 0; i < options.leadingZeros; i++) {
              rawData.unshift([...rawData[0]])
              originalAngles.unshift([...originalAngles[0]])
              rawData[0][6] = 0
              originalAngles[0][6] = 0
            }
            rawData[options.leadingZeros][6] = 1
            originalAngles[options.leadingZeros][6] = 1

            const indexesToRemove = []
            for (let i = 0; i < rawData.length-1; i++) {
              if (i < 0 || i > options.leadingZeros) {
                if (rawData[i][6] == 0) {
                  for (let j = 1; j <= Math.round(options.zerosToKeep/2); j++) {
                    if (rawData[i + j][6] === 0 && rawData[i - j][6] === 0) {
                      if (j === Math.round(options.zerosToKeep/2)) indexesToRemove.push(i)
                    }
                    else {
                      break
                    }
                  }
                }
                else if (rawData[i].every((value, index) => value === rawData[i-1][index])) {
                  indexesToRemove.push(i)
                }
    
              }
            }
            rawData = rawData.filter((_, index) => !indexesToRemove.includes(index))
            originalAngles = originalAngles.filter((_, index) => !indexesToRemove.includes(index))
            console.log(indexesToRemove.length + ' redundant rows removed.')
          }
    
          // Add column for digital_out, for now all 0x0, but is a prevision for future changes.
          if (options.addDigitalOut) {
            for (let i = 0; i < rawData.length; i++) {
              rawData[i].unshift('0x0')
            }
          }
          console.table(rawData)
          return rawData
        }
    
        function addHeaderAndSteps(myData, isAdapted) {
          let header = []
    
          if (isAdapted) {
            if (options.addDigitalOut) {
              header = ['DigitalOut','Laser','Servo 0', 'Servo 1', 'Servo 2', 'Servo 3', 'Servo 4', 'Servo 5', '\tStep', 'Original Angles']
            }
            else {
              header = ['Laser','Servo 0', 'Servo 1', 'Servo 2', 'Servo 3', 'Servo 4', 'Servo 5', '\tStep', 'Original Angles']
            }
            
            // Put laser column into first/second position, depending on digitalout existence.
            let laserColIndex = options.addDigitalOut ? 1 : 0;
            for (let i = 0; i < myData.length; i++) {
                const laserColumn = myData[i].pop()
                myData[i].splice(laserColIndex, 0, laserColumn)
            }
    
            // Add tab + closing bracket at the end of every row
            for (let i = 0; i < myData.length; i++) {
                 myData[i][myData[0].length-1] += '\t}'
            }

            // Add step number (commented)
            myData.forEach((row, index) => {
              row.push('// ' + (index+1) + '\t,\t' + originalAngles[index].join('\t'))
              numberOfSteps ++
            });
            
            // Add header to the data
            myData.unshift([''],[''],calibrationData.middlePos, calibrationData.slope, calibrationData.direction, [''], ['----- Servo angles -----'], header);
        
          }
          else {
            header = ['Step', 'Servo 0', 'Servo 1', 'Servo 2', 'Servo 3', 'Servo 4', 'Servo 5', 'Laser on/off'];
            // Create index column starting from 0
            myData.forEach((row, index) => row.unshift(index));
            myData.unshift(header)
          }
    
        }
    
        function performDownload(tableToDownload, isAdapted) {

          // Convert data to text
          let text = ''
    
          // String manipulation for formatting
          if (isAdapted) {
            let order = [' PWM Frequency: 60.0 Hz', ' Library: PCA9685', ' Middle pos:', ' Slope:', ' Direction:', '', '', '']
            let headerText = '//\t ----- ' + 'Animation data' + ' -----\n// Name: ' + data.info.name + '\n// Distance to wall: ' + data.info.distanceToWall + ' mm\n// Rotation axis offset: ' + data.info.rotationAxisOffset + ' mm\n// Drawing size: ' + data.info.drawingSize + " mm x " + data.info.drawingSize + " mm\n// Number of steps: " + numberOfSteps + '\n//\n//\t ----- Calibration values -----'
            for (i=0; i < order.length; i++) {
              headerText += '\n//'+ order[i] +'\t' + tableToDownload.shift().join('\t,\t')
            }
            const bodyText = tableToDownload.map(row => row.join('\t,\t')).join('\n{')
            text = headerText + '\n' + '{' + bodyText
            const lastComma = text.lastIndexOf(",");
            text = text.substring(0, lastComma) + text.substring(lastComma + 1)
          }
          else {
            text = tableToDownload.map(row => row.join('\t')).join('\n');
          }
    
          // Create a Blob containing the array data as text
          const blob = new Blob([text], { type: 'text/plain' });
    
          // Create a temporary anchor element
          const anchor = document.createElement('a');
          anchor.href = URL.createObjectURL(blob);
    
          // Set the file name
          const personalizedName = data.info.name.split(" ").map((word, index) => index === 0 ? word.toLowerCase() : word.charAt(0).toUpperCase() + word.slice(1)).join("") + '-W' + data.info.distanceToWall + '-O' + data.info.rotationAxisOffset + '-S' + data.info.drawingSize
          anchor.download = isAdapted ? 'a-' + personalizedName + '.txt' : personalizedName + '.txt';
    
          // Append the anchor element to the document body
          document.body.appendChild(anchor);
    
          // Trigger a click event on the anchor element
          anchor.click();
    
          // Remove the anchor element from the document body
          document.body.removeChild(anchor);
        }

        let servoAngles = cloneArray(data.angles)

        // Applying initial modifications to data (remove first steps and offset laser activation by 1 step), and set laser to 0 at last row
    
        // Remove first steps (where the pointer moves to starting shape position)
        let indexToCut = 0
        for (let i = 0; i < servoAngles.length; i++) {
          if (servoAngles[i][6] === 0) {
            if (servoAngles[i+1][6] === 1) {
              indexToCut = i
              break;
            }
          }
        }
        servoAngles.splice(0, indexToCut + 1)
    
        // For the laser on/off, we offset the value one step to fix activation.
        let activationArr = []
        for (let i = 0; i < servoAngles.length; i++) {
          if (i === 0) {
            activationArr.push(0)
          }
          else {
            activationArr.push(servoAngles[i-1][6])
          }
        }
        for (let i = 0; i < servoAngles.length; i++) {
          servoAngles[i][6] = activationArr[i]
        }
        
        // Copy last row and set laser value to zero
        servoAngles.push([...servoAngles[servoAngles.length - 1]]);
        servoAngles[servoAngles.length - 1][6] = 0;
    
        // Store original angles in a variable for later use
        let originalAngles = []
        for (var i = 0; i < servoAngles.length; i++) {
          originalAngles[i] = servoAngles[i].slice();
        }
    
        if (!options.originalValues) {
          servoAngles = adaptDataArduino(servoAngles)
          let newData = cloneArray(servoAngles)
          addHeaderAndSteps(newData, !options.originalValues);
          performDownload(newData, !options.originalValues)
        }
        else {
          addHeaderAndSteps(servoAngles, !options.originalValues);
          performDownload(servoAngles, !options.originalValues)
        }
    
    }

    function getHighestServoAngles(arr) {
        let servoAngles = arr
        let servoObject = {Servo0: [], Servo1: [], Servo2: [], Servo3: [], Servo4: [], Servo5: []}
        let highestAngles = []
        for (let i=0; i < servoAngles.length; i++ ) {
            for (let j=0; j < servoAngles[i].length; j++) {
                if (j !== 6) {
                    servoObject['Servo'+j].push(servoAngles[i][j])
                }
            }
        }
 
        for (let i=0; i<6; i++) {
            if (servoObject['Servo'+i].includes(null)) {
                highestAngles.push('Out of range, >' + Math.round(platform.servoRange[1] * 180 / Math.PI))
            }
            else {
                highestAngles.push(Math.round((Math.max(...servoObject['Servo'+i])*180/Math.PI)*10)/10)
            }
        }
        return highestAngles
    }
    
    getHighestServoValuesBtn.addEventListener('click', function () {

        const steps = 400
        const angles = getDataOfCurrentAnimation(steps, animation.drawingSize).angles
        highestAngles = getHighestServoAngles(angles)

        for (let i=0; i<highestAngles.length; i++) {
            console.log('Servo ' + i + ': ' + highestAngles[i] + ' degrees.')
        }
    })
}

// Execute the main function setupPlatform as soon as window loads on webpage.
window.onload = setupPlatform
